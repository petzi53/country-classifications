{
  "hash": "5f0b373a6c5e0d62f9d5ac3d299c8cb4",
  "result": {
    "engine": "knitr",
    "markdown": "# M49 Classification {#sec-m49}\n\n\n\n\n\n\n\n\n\n\n\n## Objectives {#sec-m49-objectives}\n\n:::::: {#obj-m49-objectives}\n::::: my-objectives\n::: my-objectives-header\nChapter section list\n:::\n\n::: my-objectives-container\n1.  Locate the file for the UN M49 geoscheme classification data, get it\n    and save it as raw data (@sec-m49-download).\n2.  Inspect the data thoroughly (@sec-m49-inspect-raw).\n3.  Clean the data (first step) (@sec-m49-clean-data-1).\n4.  Display the grouping results (@sec-m49-display-result-1).\n5.  Clean the intermediate region to get the official results\n    (@sec-m49-clean-data-2).\n6.  Display the new intermediate region group (@sec-m49-display-result-2).\n7.  List UN and non-UN member states {@sec-m49-un-member-states}\n8.  Summary and conclusion {@sec-m49-summary}\n:::\n:::::\n::::::\n\n## Download M49 Data {#sec-m49-download}\n\nAn important --- maybe the most authoritative --- classification system\nis developed and maintained by the United Nations. It is expressively\ndeveloped for statistical purposes by the United Nations Statistics\nDivision <a class='glossary' title='The United Nations Statistics Division (UNSD) is committed to the advancement of the global statistical system. It compiles and disseminates global statistical information, develop standards and norms for statistical activities, and support countries’ efforts to strengthen their national statistical systems.'>UNSD</a> using the <a class='glossary' title='The United Nations publication “Standard Country or Area Codes for Statistical Use” was originally published as Series M, No. 49 and is now commonly referred to as the M49 standard. M49 is a country/areas classification system prepared by the Statistics Division of the United Nations Secretariat primarily for use in its publications and databases.'>M49</a> methodology.\n\nThe result is called [Standard country or area codes for statistical use\n(M49)](https://unstats.un.org/unsd/methodology/m49/) and can be\ndownloaded manually in different languages and formats (Copy into the\nclipboard, Excel or CSV) from the [United Nations Methodology Overview\npage](https://unstats.un.org/unsd/methodology/m49/overview/).\n\n:::::: my-resource\n:::: my-resource-header\n::: {#lem-m49-unsd}\n: United Nations Statistics Division M49 Classification\n:::\n::::\n\n::: my-resource-container\n-   [Manual\n    download](https://unstats.un.org/unsd/methodology/m49/overview/):\n    The standard country or area codes for statistical use (M49) is\n    available in different languages (English, Chinese, Russian, French,\n    Spanish, Arabic) by clicking one of the buttons \"Copy\", \"Excel\" or\n    \"CSV\". On this page is no URL for an programmable download with an R\n    script available, because Javascript triggers the buttons mentioned\n    above.\n-   [Automatic download by OMNIKA\n    store](https://github.com/omnika-datastore/unsd-m49-standard-area-codes):\n    I found with [OMNIKA\n    DataStore](https://omnika.org/datastore)[^01-united-nations-1] an\n    external source to download the classification file via R\n    script[^01-united-nations-2].\n\nThe <a class='glossary' title='OMNIKA is an American 501©(3) nonprofit organization that operates a digital mythological library. Almost every culture has relevant mythology that explains where we came from, why things are the way they are, and a number of other things. OMNIKA’s goal is to collect, organize, index, and quantify all of those data in one place and make them available for free. (https://omnika.org/info/about)'>OMNIKA</a> URLs for download are:\n\n-   **EXCEL**:\n    [2022-09-24\\_\\_Excel_UNSD_M49.xlsx](https://github.com/omnika-datastore/unsd-m49-standard-area-codes/raw/refs/heads/main/2022-09-24__Excel_UNSD_M49.xlsx)\n-   **CSV**:\n    [2022-09-24\\_\\_CSV_UNSD_M49.csv](https://github.com/omnika-datastore/unsd-m49-standard-area-codes/raw/refs/heads/main/2022-09-24__CSV_UNSD_M49.csv)\n:::\n::::::\n\n[^01-united-nations-1]: OMNIKA DataStore is an open-access data science\n    resource for researchers, authors, and technologists. It is 501c3\n    nonprofit organization whose mission is to digitize, organize, and\n    make important (free) contents available for the general public. The\n    service provides raw data from trusted sources, data visualizations,\n    data analysis tools, and other digital resources.\n\n[^01-united-nations-2]: A check with `base::all.equal()` turned out that\n    the files from the two different sources (UNSD and OMNIKA) are\n    identical.\n\n:::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-m49-classification-download}\n: Download the United Nations M49 Classification\n:::\n::::\n\n::: my-r-code-container\n<center>**Run this code chunk manually if the file still needs to be\ndownloaded.**</center>\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\n## create folders ###########\npb_create_folder(base::paste0(here::here(), \"/data/\"))\npb_create_folder(base::paste0(here::here(), \"/data/unsd\"))\n\n## download m49 file ############\nurl <- \"https://github.com/omnika-datastore/unsd-m49-standard-area-codes/raw/refs/heads/main/2022-09-24__CSV_UNSD_M49.csv\"\n\ndownloader::download(\n    url = url,\n    destfile = base::paste0(here::here(), \n            \"/data/unsd/m49_raw.csv\")\n)\n\n\n## create R object ###############\nm49_raw <- \n  readr::read_delim(\n    file = base::paste0(here::here(), \n    \"/data/unsd/m49_raw.csv\"),\n    delim = \";\"\n  )\n\n\n## save as .rds file ################\npb_save_data_file(\n  \"unsd\", \n  m49_raw, \n  \"m49_raw.rds\")\n```\n:::\n\n\n\n\n\n<center>(*For this R code chunk is no output available*)</center>\n:::\n::::::\n\n## Inspect M49 Data {#sec-m49-inspect-raw}\n\nTo get an detailed understanding of the data structures I will provide\nthe following two outputs of the raw-data:\n\n1.  A summary statistics with `skimr::skim()` followed by inspection of\n    the first data rows with `dplyr::glimpse()`.\n2.  Several detailed outputs of the classifications categories (regions)\n    and their elements (countries) in different code chunks (tabs).\n\nTo facilitate the second task I have prepared the function\n`pb_class_scheme()` and stored in \"R./helper.r\".\n\n:::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-m49-inspect-raw}\n: Inspect raw data of the UNSD M49 geoscheme classification\n:::\n::::\n\n::: my-r-code-container\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm49_raw <- base::readRDS(\"data/unsd/m49_raw.rds\")\nglue::glue(\"******************* Using skimr::skim() ***************************\")\nskimr::skim(m49_raw)\nglue::glue(\"\")\nglue::glue(\"****************** Using dplyr::glimpse() *************************\")\ndplyr::glimpse(m49_raw)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> ******************* Using skimr::skim() ***************************\n```\n\n\n:::\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |        |\n|:------------------------|:-------|\n|Name                     |m49_raw |\n|Number of rows           |249     |\n|Number of columns        |15      |\n|_______________________  |        |\n|Column type frequency:   |        |\n|character                |15      |\n|________________________ |        |\n|Group variables          |None    |\n\n\n**Variable type: character**\n\n|skim_variable                           | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:---------------------------------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|Global Code                             |         0|          1.00|   3|   3|     0|        1|          0|\n|Global Name                             |         0|          1.00|   5|   5|     0|        1|          0|\n|Region Code                             |         1|          1.00|   3|   3|     0|        5|          0|\n|Region Name                             |         1|          1.00|   4|   8|     0|        5|          0|\n|Sub-region Code                         |         1|          1.00|   3|   3|     0|       17|          0|\n|Sub-region Name                         |         1|          1.00|   9|  31|     0|       17|          0|\n|Intermediate Region Code                |       141|          0.43|   3|   3|     0|        8|          0|\n|Intermediate Region Name                |       141|          0.43|   9|  15|     0|        8|          0|\n|Country or Area                         |         0|          1.00|   4|  52|     0|      249|          0|\n|M49 Code                                |         0|          1.00|   3|   3|     0|      249|          0|\n|ISO-alpha2 Code                         |         2|          0.99|   2|   2|     0|      247|          0|\n|ISO-alpha3 Code                         |         1|          1.00|   3|   3|     0|      248|          0|\n|Least Developed Countries (LDC)         |       203|          0.18|   1|   1|     0|        1|          0|\n|Land Locked Developing Countries (LLDC) |       217|          0.13|   1|   1|     0|        1|          0|\n|Small Island Developing States (SIDS)   |       196|          0.21|   1|   1|     0|        1|          0|\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> \n#> ****************** Using dplyr::glimpse() *************************\n#> Rows: 249\n#> Columns: 15\n#> $ `Global Code`                             <chr> \"001\", \"001\", \"001\", \"001\", …\n#> $ `Global Name`                             <chr> \"World\", \"World\", \"World\", \"…\n#> $ `Region Code`                             <chr> \"002\", \"002\", \"002\", \"002\", …\n#> $ `Region Name`                             <chr> \"Africa\", \"Africa\", \"Africa\"…\n#> $ `Sub-region Code`                         <chr> \"015\", \"015\", \"015\", \"015\", …\n#> $ `Sub-region Name`                         <chr> \"Northern Africa\", \"Northern…\n#> $ `Intermediate Region Code`                <chr> NA, NA, NA, NA, NA, NA, NA, …\n#> $ `Intermediate Region Name`                <chr> NA, NA, NA, NA, NA, NA, NA, …\n#> $ `Country or Area`                         <chr> \"Algeria\", \"Egypt\", \"Libya\",…\n#> $ `M49 Code`                                <chr> \"012\", \"818\", \"434\", \"504\", …\n#> $ `ISO-alpha2 Code`                         <chr> \"DZ\", \"EG\", \"LY\", \"MA\", \"SD\"…\n#> $ `ISO-alpha3 Code`                         <chr> \"DZA\", \"EGY\", \"LBY\", \"MAR\", …\n#> $ `Least Developed Countries (LDC)`         <chr> NA, NA, NA, NA, \"x\", NA, NA,…\n#> $ `Land Locked Developing Countries (LLDC)` <chr> NA, NA, NA, NA, NA, NA, NA, …\n#> $ `Small Island Developing States (SIDS)`   <chr> NA, NA, NA, NA, NA, NA, NA, …\n```\n\n\n:::\n:::\n\n\n\n\n:::\n::::::\n\nThe file has 15 columns as you can also see online from the [Overview\npage](https://unstats.un.org/unsd/methodology/m49/overview/).\n\nThe many missing values (`NAs`) for the categories <a class='glossary' title='Least Developing Countries (LCD) are — according to the United Nations Statistics Division (UNSD) and the Standard Country or Area Codes for Statistical Use (M49) — currently 45 economies designated as Least Developed Countries (LDCs). These countries are entitled to preferential market access, aid, special technical assistance, and capacity-building on technology, among other concessions.'>LDC</a>,\n<a class='glossary' title='Landlocked Developing Countries (LLDCs) are a group of 32 countries, as categorized by the United Nations Statistics Division (UNSD) in the M49 specification. The LLDCs include some of the poorest countries in the world, with a lack of territorial access to the sea, which can hinder their economic development. This group of countries faces specific challenges due to their landlocked status, including higher transportation costs, reduced trade opportunities, and limited access to international markets.'>LLDC</a> and <a class='glossary' title='Small Island Developing States (SIDS) are a group of developing countries that are small island countries and small states that tend to share similar sustainable development challenges. These challenges include small but growing populations, limited resources, remoteness, susceptibility to natural disasters, vulnerability to external shocks, excessive dependence on international trade, and fragile environments.'>SIDS</a> are easy explained: These\nthree columns are coded with an 'x' if the country of this row belong to\nthis category. Recoding these three columns with 1 and 0 (1 = yes,\nbelongs to this category, 0 = no, does not belong to this category) will\nreduce most of their missing values.\n\nOne missing value in the regional categories (Region, Sub-Region and\nIntermediate Region) is related to Antarctica which is not seen by the\nM49 scheme as a separated region. It has therefore no regional codes and\nnames with the exception of the overall comprising global region. But it\nhas M49 as well ISO-alpha codes.\n\nOne of the missing values for ISO-alpha2 and ISO-alpha3 is related to\nSark, which is \"recognized by the United Nations Statistics Division\n(UNSD) as a separate territory\" but was not accepted by ISO now for more\nthan 20 years [@mccarthy-2020]. Recently a new application (see\n[PDF](https://www.sarkid.org/assets/pdf/SarkID%20Identity%20info%20v1_2.pdf))\nwill change that but currently [^01-united-nations-3] is still waiting\nfor [ISO 3166 codes](https://www.iso.org/iso-3166-country-codes.html).\n\n[^01-united-nations-3]: Even if United Nations and ISO both list 249\n    entries (including Antarctica) there is a small difference between\n    ISO 3166 codes and the M49 geoscheme of the UN: The UN lists Sark\n    (without ISO codes), whereas the list of ISO includes \"Taiwan\n    (Province of China)\" with the ISO codes \"TW2 and \"TWN\".\n\nThe other missing value for ISO-alpha2 codes belongs to Namibia because\nits abbreviation `NA` is interpreted by R as a missing value!\n\n## Clean Data (first step) {#sec-m49-clean-data-1}\n\n### Procedure\n\n:::::: my-procedure\n:::: my-procedure-header\n::: {#prp-m49-clean-1}\n: Clean M49 data of the UNSD geoscheme classification (first step)\n:::\n::::\n\n::: my-procedure-container\n1.  Remove the global codes and global names because they a redundant:\n    All rows have global code \"001\" (\"World\").\n2.  Shorten long names to their abbreviation (\"LCD\", \"LLCD\" and \"SIDS\").\n3.  Remove row \"Antarctica\" because it is not seen as separate country.\n4.  Replace `NA` in the column ISO-alpha2 Code\" of Namibia with the\n    string \"NA\".\n5.  Recode the columns <a class='glossary' title='Least Developing Countries (LCD) are — according to the United Nations Statistics Division (UNSD) and the Standard Country or Area Codes for Statistical Use (M49) — currently 45 economies designated as Least Developed Countries (LDCs). These countries are entitled to preferential market access, aid, special technical assistance, and capacity-building on technology, among other concessions.'>LDC</a>, <a class='glossary' title='Landlocked Developing Countries (LLDCs) are a group of 32 countries, as categorized by the United Nations Statistics Division (UNSD) in the M49 specification. The LLDCs include some of the poorest countries in the world, with a lack of territorial access to the sea, which can hinder their economic development. This group of countries faces specific challenges due to their landlocked status, including higher transportation costs, reduced trade opportunities, and limited access to international markets.'>LLDC</a> and\n    <a class='glossary' title='Small Island Developing States (SIDS) are a group of developing countries that are small island countries and small states that tend to share similar sustainable development challenges. These challenges include small but growing populations, limited resources, remoteness, susceptibility to natural disasters, vulnerability to external shocks, excessive dependence on international trade, and fragile environments.'>SIDS</a> with 0 and 1.\n6.  Relocate columns `ISO-alpha3 CODE` and `Country or Area` to the\n    first two columns because these two columns are always relevant for\n    the later groupings and joining with groupings from other sources.\n7.  Sort the data alphabetically by `Country or Area`.\n:::\n::::::\n\n### Result (first step) {#sec-m49-display-result-1}\n\n#### Data Structure\n\n:::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-m49-clean-1}\n: Clean UNSD M49 geoscheme classification data (first step)\n:::\n::::\n\n::: my-r-code-container\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## column renaming vector ########\nm49_cols = c(\n  LDC = \"Least Developed Countries (LDC)\", \n  LLDC = \"Land Locked Developing Countries (LLDC)\", \n  SIDS = \"Small Island Developing States (SIDS)\"\n  )\n\n\n## clean data ###############################\nm49_clean <- base::readRDS(\"data/unsd/m49_raw.rds\") |> \n  dplyr::select(-(1:2)) |> # (1)\n  dplyr::rename(tidyselect::all_of(m49_cols)) |> # (2) \n  dplyr::filter(`Country or Area` != \"Antarctica\") |> # (3)\n  dplyr::mutate(`ISO-alpha2 Code` = \n      base::ifelse(`Country or Area` == \"Namibia\", \"NA\", `ISO-alpha2 Code`)) |> # (4)\n  dplyr::relocate(\n      ## any_of() does not understand object names (??)\n      tidyselect::any_of(c(\"ISO-alpha3 Code\", \"Country or Area\")), .before = `Region Code`) |> # (5)\n  # .x = anonymous function; \"x\" = value in cols of m40_clean\n  dplyr::mutate(dplyr::across(\n    LDC:SIDS, ~ dplyr::if_else(.x == \"x\", \"1\", \"999\", \"0\") \n    )) |> # (6)\n  dplyr::arrange(`Country or Area`) # (7)\n\n## save new tibble ##########\npb_save_data_file(\n  \"unsd\",\n  m49_clean,\n  \"m49_clean.rds\"\n)\n\n## display results ##########\nm49_clean <- base::readRDS(\"data/unsd/m49_clean.rds\")\nglue::glue(\"******************* Using skimr::skim() ***************************\")\nskimr::skim(m49_clean)\nglue::glue(\"\")\nglue::glue(\"****************** Using dplyr::glimpse() *************************\")\ndplyr::glimpse(m49_clean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> ******************* Using skimr::skim() ***************************\n```\n\n\n:::\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |          |\n|:------------------------|:---------|\n|Name                     |m49_clean |\n|Number of rows           |248       |\n|Number of columns        |13        |\n|_______________________  |          |\n|Column type frequency:   |          |\n|character                |13        |\n|________________________ |          |\n|Group variables          |None      |\n\n\n**Variable type: character**\n\n|skim_variable            | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:------------------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|ISO-alpha3 Code          |         1|          1.00|   3|   3|     0|      247|          0|\n|Country or Area          |         0|          1.00|   4|  52|     0|      248|          0|\n|Region Code              |         0|          1.00|   3|   3|     0|        5|          0|\n|Region Name              |         0|          1.00|   4|   8|     0|        5|          0|\n|Sub-region Code          |         0|          1.00|   3|   3|     0|       17|          0|\n|Sub-region Name          |         0|          1.00|   9|  31|     0|       17|          0|\n|Intermediate Region Code |       140|          0.44|   3|   3|     0|        8|          0|\n|Intermediate Region Name |       140|          0.44|   9|  15|     0|        8|          0|\n|M49 Code                 |         0|          1.00|   3|   3|     0|      248|          0|\n|ISO-alpha2 Code          |         1|          1.00|   2|   2|     0|      247|          0|\n|LDC                      |         0|          1.00|   1|   1|     0|        2|          0|\n|LLDC                     |         0|          1.00|   1|   1|     0|        2|          0|\n|SIDS                     |         0|          1.00|   1|   1|     0|        2|          0|\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> \n#> ****************** Using dplyr::glimpse() *************************\n#> Rows: 248\n#> Columns: 13\n#> $ `ISO-alpha3 Code`          <chr> \"AFG\", \"ALB\", \"DZA\", \"ASM\", \"AND\", \"AGO\", \"…\n#> $ `Country or Area`          <chr> \"Afghanistan\", \"Albania\", \"Algeria\", \"Ameri…\n#> $ `Region Code`              <chr> \"142\", \"150\", \"002\", \"009\", \"150\", \"002\", \"…\n#> $ `Region Name`              <chr> \"Asia\", \"Europe\", \"Africa\", \"Oceania\", \"Eur…\n#> $ `Sub-region Code`          <chr> \"034\", \"039\", \"015\", \"061\", \"039\", \"202\", \"…\n#> $ `Sub-region Name`          <chr> \"Southern Asia\", \"Southern Europe\", \"Northe…\n#> $ `Intermediate Region Code` <chr> NA, NA, NA, NA, NA, \"017\", \"029\", \"029\", \"0…\n#> $ `Intermediate Region Name` <chr> NA, NA, NA, NA, NA, \"Middle Africa\", \"Carib…\n#> $ `M49 Code`                 <chr> \"004\", \"008\", \"012\", \"016\", \"020\", \"024\", \"…\n#> $ `ISO-alpha2 Code`          <chr> \"AF\", \"AL\", \"DZ\", \"AS\", \"AD\", \"AO\", \"AI\", \"…\n#> $ LDC                        <chr> \"1\", \"0\", \"0\", \"0\", \"0\", \"1\", \"0\", \"0\", \"0\"…\n#> $ LLDC                       <chr> \"1\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\"…\n#> $ SIDS                       <chr> \"0\", \"0\", \"0\", \"1\", \"0\", \"0\", \"1\", \"1\", \"0\"…\n```\n\n\n:::\n:::\n\n\n\n\n\n------------------------------------------------------------------------\n\nAs explained above, only Sark has no value for `ISO-alpha2 Code` and\n`ISO-alpha3 Code` .\n:::\n::::::\n\n#### Regional Groups\n\nAs we can see from @cnj-m49-clean-1 the M49 classification of the United\nNations knows three different regional groups (in addition to the\noverall region `World`.)\n\n:::::::::::::::::::: my-code-collection\n::::: my-code-collection-header\n::: my-code-collection-icon\n:::\n\n::: {#exm-m49-show-regional-groups}\n: Display different regional groups\n:::\n:::::\n\n:::::::::::::::: my-code-collection-container\n::::::::::::::: panel-tabset\n###### Region\n\n:::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-m49-show-region-group}\n: Show Regions of the UNSD M49 Geoscheme\n:::\n::::\n\n::: my-r-code-container\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(\n    m49_region <-  pb_class_scheme(\n            df = base::readRDS(\"data/unsd/m49_clean.rds\"),\n            sel1 = rlang::quo(`Country or Area`),\n            sel2 = rlang::quo(`Region Name`)\n        )\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-c95f82920aec0653dd0b\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-c95f82920aec0653dd0b\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\"],[\"Africa\",\"Americas\",\"Asia\",\"Europe\",\"Oceania\"],[\"Algeria; Angola; Benin; Botswana; British Indian Ocean Territory; Burkina Faso; Burundi; Cabo Verde; Cameroon; Central African Republic; Chad; Comoros; Congo; Côte d’Ivoire; Democratic Republic of the Congo; Djibouti; Egypt; Equatorial Guinea; Eritrea; Eswatini; Ethiopia; French Southern Territories; Gabon; Gambia; Ghana; Guinea; Guinea-Bissau; Kenya; Lesotho; Liberia; Libya; Madagascar; Malawi; Mali; Mauritania; Mauritius; Mayotte; Morocco; Mozambique; Namibia; Niger; Nigeria; Rwanda; Réunion; Saint Helena; Sao Tome and Principe; Senegal; Seychelles; Sierra Leone; Somalia; South Africa; South Sudan; Sudan; Togo; Tunisia; Uganda; United Republic of Tanzania; Western Sahara; Zambia; Zimbabwe ;\",\"Anguilla; Antigua and Barbuda; Argentina; Aruba; Bahamas; Barbados; Belize; Bermuda; Bolivia (Plurinational State of); Bonaire, Sint Eustatius and Saba; Bouvet Island; Brazil; British Virgin Islands; Canada; Cayman Islands; Chile; Colombia; Costa Rica; Cuba; Curaçao; Dominica; Dominican Republic; Ecuador; El Salvador; Falkland Islands (Malvinas); French Guiana; Greenland; Grenada; Guadeloupe; Guatemala; Guyana; Haiti; Honduras; Jamaica; Martinique; Mexico; Montserrat; Nicaragua; Panama; Paraguay; Peru; Puerto Rico; Saint Barthélemy; Saint Kitts and Nevis; Saint Lucia; Saint Martin (French Part); Saint Pierre and Miquelon; Saint Vincent and the Grenadines; Sint Maarten (Dutch part); South Georgia and the South Sandwich Islands; Suriname; Trinidad and Tobago; Turks and Caicos Islands; United States Virgin Islands; United States of America; Uruguay; Venezuela (Bolivarian Republic of) ;\",\"Afghanistan; Armenia; Azerbaijan; Bahrain; Bangladesh; Bhutan; Brunei Darussalam; Cambodia; China; China, Hong Kong Special Administrative Region; China, Macao Special Administrative Region; Cyprus; Democratic People's Republic of Korea; Georgia; India; Indonesia; Iran (Islamic Republic of); Iraq; Israel; Japan; Jordan; Kazakhstan; Kuwait; Kyrgyzstan; Lao People's Democratic Republic; Lebanon; Malaysia; Maldives; Mongolia; Myanmar; Nepal; Oman; Pakistan; Philippines; Qatar; Republic of Korea; Saudi Arabia; Singapore; Sri Lanka; State of Palestine; Syrian Arab Republic; Tajikistan; Thailand; Timor-Leste; Turkmenistan; Türkiye; United Arab Emirates; Uzbekistan; Viet Nam; Yemen ;\",\"Albania; Andorra; Austria; Belarus; Belgium; Bosnia and Herzegovina; Bulgaria; Croatia; Czechia; Denmark; Estonia; Faroe Islands; Finland; France; Germany; Gibraltar; Greece; Guernsey; Holy See; Hungary; Iceland; Ireland; Isle of Man; Italy; Jersey; Latvia; Liechtenstein; Lithuania; Luxembourg; Malta; Monaco; Montenegro; Netherlands; North Macedonia; Norway; Poland; Portugal; Republic of Moldova; Romania; Russian Federation; San Marino; Sark; Serbia; Slovakia; Slovenia; Spain; Svalbard and Jan Mayen Islands; Sweden; Switzerland; Ukraine; United Kingdom of Great Britain and Northern Ireland; Åland Islands ;\",\"American Samoa; Australia; Christmas Island; Cocos (Keeling) Islands; Cook Islands; Fiji; French Polynesia; Guam; Heard Island and McDonald Islands; Kiribati; Marshall Islands; Micronesia (Federated States of); Nauru; New Caledonia; New Zealand; Niue; Norfolk Island; Northern Mariana Islands; Palau; Papua New Guinea; Pitcairn; Samoa; Solomon Islands; Tokelau; Tonga; Tuvalu; United States Minor Outlying Islands; Vanuatu; Wallis and Futuna Islands ;\"],[60,57,50,52,29]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Region Name<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"Region Name\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n------------------------------------------------------------------------\n\n\"Region\" is a classification scheme with **248\ncountries in 5 regions**.\n:::\n::::::\n\n###### Sub-region\n\n:::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-m49-show-sub-regional-groups}\n: Show Sub-regions of the UNSD M49 Geoscheme\n:::\n::::\n\n::: my-r-code-container\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(\n    m49_sub_region <- pb_class_scheme(\n            df <-  base::readRDS(\"data/unsd/m49_clean.rds\"),\n            sel1 = rlang::quo(`Country or Area`),\n            sel2 = rlang::quo(`Sub-region Name`)\n        )\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-871715ed59c2f94028a1\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-871715ed59c2f94028a1\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\"],[\"Australia and New Zealand\",\"Central Asia\",\"Eastern Asia\",\"Eastern Europe\",\"Latin America and the Caribbean\",\"Melanesia\",\"Micronesia\",\"Northern Africa\",\"Northern America\",\"Northern Europe\",\"Polynesia\",\"South-eastern Asia\",\"Southern Asia\",\"Southern Europe\",\"Sub-Saharan Africa\",\"Western Asia\",\"Western Europe\"],[\"Australia; Christmas Island; Cocos (Keeling) Islands; Heard Island and McDonald Islands; New Zealand; Norfolk Island ;\",\"Kazakhstan; Kyrgyzstan; Tajikistan; Turkmenistan; Uzbekistan ;\",\"China; China, Hong Kong Special Administrative Region; China, Macao Special Administrative Region; Democratic People's Republic of Korea; Japan; Mongolia; Republic of Korea ;\",\"Belarus; Bulgaria; Czechia; Hungary; Poland; Republic of Moldova; Romania; Russian Federation; Slovakia; Ukraine ;\",\"Anguilla; Antigua and Barbuda; Argentina; Aruba; Bahamas; Barbados; Belize; Bolivia (Plurinational State of); Bonaire, Sint Eustatius and Saba; Bouvet Island; Brazil; British Virgin Islands; Cayman Islands; Chile; Colombia; Costa Rica; Cuba; Curaçao; Dominica; Dominican Republic; Ecuador; El Salvador; Falkland Islands (Malvinas); French Guiana; Grenada; Guadeloupe; Guatemala; Guyana; Haiti; Honduras; Jamaica; Martinique; Mexico; Montserrat; Nicaragua; Panama; Paraguay; Peru; Puerto Rico; Saint Barthélemy; Saint Kitts and Nevis; Saint Lucia; Saint Martin (French Part); Saint Vincent and the Grenadines; Sint Maarten (Dutch part); South Georgia and the South Sandwich Islands; Suriname; Trinidad and Tobago; Turks and Caicos Islands; United States Virgin Islands; Uruguay; Venezuela (Bolivarian Republic of) ;\",\"Fiji; New Caledonia; Papua New Guinea; Solomon Islands; Vanuatu ;\",\"Guam; Kiribati; Marshall Islands; Micronesia (Federated States of); Nauru; Northern Mariana Islands; Palau; United States Minor Outlying Islands ;\",\"Algeria; Egypt; Libya; Morocco; Sudan; Tunisia; Western Sahara ;\",\"Bermuda; Canada; Greenland; Saint Pierre and Miquelon; United States of America ;\",\"Denmark; Estonia; Faroe Islands; Finland; Guernsey; Iceland; Ireland; Isle of Man; Jersey; Latvia; Lithuania; Norway; Sark; Svalbard and Jan Mayen Islands; Sweden; United Kingdom of Great Britain and Northern Ireland; Åland Islands ;\",\"American Samoa; Cook Islands; French Polynesia; Niue; Pitcairn; Samoa; Tokelau; Tonga; Tuvalu; Wallis and Futuna Islands ;\",\"Brunei Darussalam; Cambodia; Indonesia; Lao People's Democratic Republic; Malaysia; Myanmar; Philippines; Singapore; Thailand; Timor-Leste; Viet Nam ;\",\"Afghanistan; Bangladesh; Bhutan; India; Iran (Islamic Republic of); Maldives; Nepal; Pakistan; Sri Lanka ;\",\"Albania; Andorra; Bosnia and Herzegovina; Croatia; Gibraltar; Greece; Holy See; Italy; Malta; Montenegro; North Macedonia; Portugal; San Marino; Serbia; Slovenia; Spain ;\",\"Angola; Benin; Botswana; British Indian Ocean Territory; Burkina Faso; Burundi; Cabo Verde; Cameroon; Central African Republic; Chad; Comoros; Congo; Côte d’Ivoire; Democratic Republic of the Congo; Djibouti; Equatorial Guinea; Eritrea; Eswatini; Ethiopia; French Southern Territories; Gabon; Gambia; Ghana; Guinea; Guinea-Bissau; Kenya; Lesotho; Liberia; Madagascar; Malawi; Mali; Mauritania; Mauritius; Mayotte; Mozambique; Namibia; Niger; Nigeria; Rwanda; Réunion; Saint Helena; Sao Tome and Principe; Senegal; Seychelles; Sierra Leone; Somalia; South Africa; South Sudan; Togo; Uganda; United Republic of Tanzania; Zambia; Zimbabwe ;\",\"Armenia; Azerbaijan; Bahrain; Cyprus; Georgia; Iraq; Israel; Jordan; Kuwait; Lebanon; Oman; Qatar; Saudi Arabia; State of Palestine; Syrian Arab Republic; Türkiye; United Arab Emirates; Yemen ;\",\"Austria; Belgium; France; Germany; Liechtenstein; Luxembourg; Monaco; Netherlands; Switzerland ;\"],[6,5,7,10,52,5,8,7,5,17,10,11,9,16,53,18,9]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Sub-region Name<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"Sub-region Name\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n------------------------------------------------------------------------\n\n\"Sub-region\" is a classification scheme with\n**248 countries in\n17 regions**.\n:::\n::::::\n\n###### Intermediate\n\n:::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-m49-show-intermediate-regional-groups}\n: : Show Intermediate Regions of the UNSD M49 Geoscheme\n:::\n::::\n\n::: my-r-code-container\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(\n    m49_intermediate_region <- pb_class_scheme(\n                df = base::readRDS(\"data/unsd/m49_clean.rds\"),\n                sel1 = rlang::quo(`Country or Area`),\n                sel2 = rlang::quo(`Intermediate Region Name`)\n            )\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-730c6ce8207f42bb292c\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-730c6ce8207f42bb292c\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"],[\"Caribbean\",\"Central America\",\"Channel Islands\",\"Eastern Africa\",\"Middle Africa\",\"South America\",\"Southern Africa\",\"Western Africa\",null],[\"Anguilla; Antigua and Barbuda; Aruba; Bahamas; Barbados; Bonaire, Sint Eustatius and Saba; British Virgin Islands; Cayman Islands; Cuba; Curaçao; Dominica; Dominican Republic; Grenada; Guadeloupe; Haiti; Jamaica; Martinique; Montserrat; Puerto Rico; Saint Barthélemy; Saint Kitts and Nevis; Saint Lucia; Saint Martin (French Part); Saint Vincent and the Grenadines; Sint Maarten (Dutch part); Trinidad and Tobago; Turks and Caicos Islands; United States Virgin Islands ;\",\"Belize; Costa Rica; El Salvador; Guatemala; Honduras; Mexico; Nicaragua; Panama ;\",\"Guernsey; Jersey; Sark ;\",\"British Indian Ocean Territory; Burundi; Comoros; Djibouti; Eritrea; Ethiopia; French Southern Territories; Kenya; Madagascar; Malawi; Mauritius; Mayotte; Mozambique; Rwanda; Réunion; Seychelles; Somalia; South Sudan; Uganda; United Republic of Tanzania; Zambia; Zimbabwe ;\",\"Angola; Cameroon; Central African Republic; Chad; Congo; Democratic Republic of the Congo; Equatorial Guinea; Gabon; Sao Tome and Principe ;\",\"Argentina; Bolivia (Plurinational State of); Bouvet Island; Brazil; Chile; Colombia; Ecuador; Falkland Islands (Malvinas); French Guiana; Guyana; Paraguay; Peru; South Georgia and the South Sandwich Islands; Suriname; Uruguay; Venezuela (Bolivarian Republic of) ;\",\"Botswana; Eswatini; Lesotho; Namibia; South Africa ;\",\"Benin; Burkina Faso; Cabo Verde; Côte d’Ivoire; Gambia; Ghana; Guinea; Guinea-Bissau; Liberia; Mali; Mauritania; Niger; Nigeria; Saint Helena; Senegal; Sierra Leone; Togo ;\",\"Afghanistan; Albania; Algeria; American Samoa; Andorra; Armenia; Australia; Austria; Azerbaijan; Bahrain; Bangladesh; Belarus; Belgium; Bermuda; Bhutan; Bosnia and Herzegovina; Brunei Darussalam; Bulgaria; Cambodia; Canada; China; China, Hong Kong Special Administrative Region; China, Macao Special Administrative Region; Christmas Island; Cocos (Keeling) Islands; Cook Islands; Croatia; Cyprus; Czechia; Democratic People's Republic of Korea; Denmark; Egypt; Estonia; Faroe Islands; Fiji; Finland; France; French Polynesia; Georgia; Germany; Gibraltar; Greece; Greenland; Guam; Heard Island and McDonald Islands; Holy See; Hungary; Iceland; India; Indonesia; Iran (Islamic Republic of); Iraq; Ireland; Isle of Man; Israel; Italy; Japan; Jordan; Kazakhstan; Kiribati; Kuwait; Kyrgyzstan; Lao People's Democratic Republic; Latvia; Lebanon; Libya; Liechtenstein; Lithuania; Luxembourg; Malaysia; Maldives; Malta; Marshall Islands; Micronesia (Federated States of); Monaco; Mongolia; Montenegro; Morocco; Myanmar; Nauru; Nepal; Netherlands; New Caledonia; New Zealand; Niue; Norfolk Island; North Macedonia; Northern Mariana Islands; Norway; Oman; Pakistan; Palau; Papua New Guinea; Philippines; Pitcairn; Poland; Portugal; Qatar; Republic of Korea; Republic of Moldova; Romania; Russian Federation; Saint Pierre and Miquelon; Samoa; San Marino; Saudi Arabia; Serbia; Singapore; Slovakia; Slovenia; Solomon Islands; Spain; Sri Lanka; State of Palestine; Sudan; Svalbard and Jan Mayen Islands; Sweden; Switzerland; Syrian Arab Republic; Tajikistan; Thailand; Timor-Leste; Tokelau; Tonga; Tunisia; Turkmenistan; Tuvalu; Türkiye; Ukraine; United Arab Emirates; United Kingdom of Great Britain and Northern Ireland; United States Minor Outlying Islands; United States of America; Uzbekistan; Vanuatu; Viet Nam; Wallis and Futuna Islands; Western Sahara; Yemen; Åland Islands ;\"],[28,8,3,22,9,16,5,17,140]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Intermediate Region Name<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"Intermediate Region Name\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n------------------------------------------------------------------------\n\n\"Intermediate Region\" is a classification scheme with\n**248 countries in\n9 regions**.\n:::\n::::::\n:::::::::::::::\n::::::::::::::::\n::::::::::::::::::::\n\n## Clean Data (second step) {#sec-m49-clean-data-2}\n\nThe intermediate grouping does not result into the expected 22 (with\nAntarctica: 23) different regions as is mentioned in many documents. See\nfor instance the [Article on Wikipedia about the UN\ngeoscheme](https://en.wikipedia.org/wiki/United_Nations_geoscheme) which\nfeatures a [colored world\nmap](https://en.wikipedia.org/wiki/United_Nations_geoscheme#/media/File:United_Nations_geographical_subregions.png)\nand a list of countries grouped into the 22 different regions.\n\n![M49 Geoscheme developed and maintained by the United Nations\nStatistics Divisions (UNSD).\n(<a href=\"http://creativecommons.org/licenses/by-sa/3.0/\" title=\"Creative Commons Attribution-Share Alike 3.0\">CC\nBY-SA 3.0</a>,\n<a href=\"https://commons.wikimedia.org/w/index.php?curid=497598\">Wikimedia\nCommons</a>)](img/chap01_UN_geographical_subregions.png){#fig-chap01_UN_geographical_subregions\nfig-alt=\"22 geographical sub-regions as defined by the UNSD are shown with different colors. Antarctica is not shown.\"\nfig-align=\"center\" width=\"100%\"}\n\nThe solution is that we have the `NA`s in `Intermediate Region Name` to\nreplace with the values of the sub-regions. Additionally --- as can be\nseen in @cnj-m49-show-intermediate-regional-groups --- there is a second\nsmall problem: Three small countries are listed as an extra group\n\"Channel Islands\". To get the official intermediate grouping we need to\nget rid of this group and sort all three of them into the category of\n\"Northern Europe\".\n\n### Procedure\n\n:::::: my-procedure\n:::: my-procedure-header\n::: {#prp-m49-cnj-clean-2}\n: Clean M49 data of the UNSD geoscheme classification (second step)\n:::\n::::\n\n::: my-procedure-container\n1.  Replace the `NA` values of `Intermediate Region Name` with values\n    from the `Sub-region Name` column.\n2.  Replace the `NA` values of `Intermediate Region Code` with values\n    from the `Sub-region Code` column.\n3.  Replace the \"Channel Islands\" values in `Intermediate Region Name`\n    with the value of \"Northern Europe\".\n4.  Replace the \"Channel Islands\" values (\"830\") in\n    `Intermediate Region Code` with the code of \"Northern Europe\"\n    (\"154\").\n:::\n::::::\n\n### Result (second step) {#sec-m49-display-result-2}\n\n#### Data Structure\n\n:::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-m49-clean-2}\n: Clean UNSD M49 geoscheme classification data (second step)\n:::\n::::\n\n::: my-r-code-container\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm49_clean2 <- base::readRDS(\"data/unsd/m49_clean.rds\") |> \n## replace `NA`s of intermediate regions with sub-region values ######\n  dplyr::mutate(`Intermediate Region Name` = \n         base::ifelse(is.na(`Intermediate Region Name`), \n                      `Sub-region Name`, `Intermediate Region Name`), # (1)\n     `Intermediate Region Code` = \n         base::ifelse(is.na(`Intermediate Region Code`), \n                      `Sub-region Code`, `Intermediate Region Code`), # (2)\n## replace \"\"Channel Islands\" with \"Northen Europe\" values ######\n    `Intermediate Region Name` = \n         base::ifelse(`Intermediate Region Name` == \"Channel Islands\", \n                      \"Northern Europe\", `Intermediate Region Name`), # (3)\n    `Intermediate Region Code` = \n         base::ifelse(`Intermediate Region Code` == \"830\", \n                      \"154\", `Intermediate Region Code`)              # (4) \n  )\n\n\n## save new tibble as clean2 ##########\npb_save_data_file(\"unsd\", m49_clean2, \"m49_clean2.rds\")\n\n\n## display results ##########\nm49_clean2 <- base::readRDS(\"data/unsd/m49_clean2.rds\")\nglue::glue(\"******************* Using skimr::skim() ***************************\")\nskimr::skim(m49_clean2)\nglue::glue(\"\")\nglue::glue(\"****************** Using dplyr::glimpse() *************************\")\ndplyr::glimpse(m49_clean2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> ******************* Using skimr::skim() ***************************\n```\n\n\n:::\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |           |\n|:------------------------|:----------|\n|Name                     |m49_clean2 |\n|Number of rows           |248        |\n|Number of columns        |13         |\n|_______________________  |           |\n|Column type frequency:   |           |\n|character                |13         |\n|________________________ |           |\n|Group variables          |None       |\n\n\n**Variable type: character**\n\n|skim_variable            | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:------------------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|ISO-alpha3 Code          |         1|             1|   3|   3|     0|      247|          0|\n|Country or Area          |         0|             1|   4|  52|     0|      248|          0|\n|Region Code              |         0|             1|   3|   3|     0|        5|          0|\n|Region Name              |         0|             1|   4|   8|     0|        5|          0|\n|Sub-region Code          |         0|             1|   3|   3|     0|       17|          0|\n|Sub-region Name          |         0|             1|   9|  31|     0|       17|          0|\n|Intermediate Region Code |         0|             1|   3|   3|     0|       22|          0|\n|Intermediate Region Name |         0|             1|   9|  25|     0|       22|          0|\n|M49 Code                 |         0|             1|   3|   3|     0|      248|          0|\n|ISO-alpha2 Code          |         1|             1|   2|   2|     0|      247|          0|\n|LDC                      |         0|             1|   1|   1|     0|        2|          0|\n|LLDC                     |         0|             1|   1|   1|     0|        2|          0|\n|SIDS                     |         0|             1|   1|   1|     0|        2|          0|\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> \n#> ****************** Using dplyr::glimpse() *************************\n#> Rows: 248\n#> Columns: 13\n#> $ `ISO-alpha3 Code`          <chr> \"AFG\", \"ALB\", \"DZA\", \"ASM\", \"AND\", \"AGO\", \"…\n#> $ `Country or Area`          <chr> \"Afghanistan\", \"Albania\", \"Algeria\", \"Ameri…\n#> $ `Region Code`              <chr> \"142\", \"150\", \"002\", \"009\", \"150\", \"002\", \"…\n#> $ `Region Name`              <chr> \"Asia\", \"Europe\", \"Africa\", \"Oceania\", \"Eur…\n#> $ `Sub-region Code`          <chr> \"034\", \"039\", \"015\", \"061\", \"039\", \"202\", \"…\n#> $ `Sub-region Name`          <chr> \"Southern Asia\", \"Southern Europe\", \"Northe…\n#> $ `Intermediate Region Code` <chr> \"034\", \"039\", \"015\", \"061\", \"039\", \"017\", \"…\n#> $ `Intermediate Region Name` <chr> \"Southern Asia\", \"Southern Europe\", \"Northe…\n#> $ `M49 Code`                 <chr> \"004\", \"008\", \"012\", \"016\", \"020\", \"024\", \"…\n#> $ `ISO-alpha2 Code`          <chr> \"AF\", \"AL\", \"DZ\", \"AS\", \"AD\", \"AO\", \"AI\", \"…\n#> $ LDC                        <chr> \"1\", \"0\", \"0\", \"0\", \"0\", \"1\", \"0\", \"0\", \"0\"…\n#> $ LLDC                       <chr> \"1\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\"…\n#> $ SIDS                       <chr> \"0\", \"0\", \"0\", \"1\", \"0\", \"0\", \"1\", \"1\", \"0\"…\n```\n\n\n:::\n:::\n\n\n\n\n:::\n::::::\n\nWith the \"trick\" to replace the `NA`s of `Intermediate Region Name` with\nthe values of `Sub-regional Name`column we also got rid of the many\n`NA`s in that and the accompanying `Intermediate Region Code` column.\n\n#### Intermediate Region Again\n\n:::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-m49-show-intermediate-region-2}\n: Show correct intermediate region for the UNSD M49 Geoscheme\n:::\n::::\n\n::: my-r-code-container\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## show new intermediate result ###############\n(\n    m49_intermediate2 <- pb_class_scheme(\n            df = base::readRDS(\"data/unsd/m49_clean2.rds\"),\n            sel1 = rlang::quo(`Country or Area`),\n            sel2 = rlang::quo(`Intermediate Region Name`)\n            )\n) \n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-8b4e71dbe4c2dcb3137b\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-8b4e71dbe4c2dcb3137b\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\"],[\"Australia and New Zealand\",\"Caribbean\",\"Central America\",\"Central Asia\",\"Eastern Africa\",\"Eastern Asia\",\"Eastern Europe\",\"Melanesia\",\"Micronesia\",\"Middle Africa\",\"Northern Africa\",\"Northern America\",\"Northern Europe\",\"Polynesia\",\"South America\",\"South-eastern Asia\",\"Southern Africa\",\"Southern Asia\",\"Southern Europe\",\"Western Africa\",\"Western Asia\",\"Western Europe\"],[\"Australia; Christmas Island; Cocos (Keeling) Islands; Heard Island and McDonald Islands; New Zealand; Norfolk Island ;\",\"Anguilla; Antigua and Barbuda; Aruba; Bahamas; Barbados; Bonaire, Sint Eustatius and Saba; British Virgin Islands; Cayman Islands; Cuba; Curaçao; Dominica; Dominican Republic; Grenada; Guadeloupe; Haiti; Jamaica; Martinique; Montserrat; Puerto Rico; Saint Barthélemy; Saint Kitts and Nevis; Saint Lucia; Saint Martin (French Part); Saint Vincent and the Grenadines; Sint Maarten (Dutch part); Trinidad and Tobago; Turks and Caicos Islands; United States Virgin Islands ;\",\"Belize; Costa Rica; El Salvador; Guatemala; Honduras; Mexico; Nicaragua; Panama ;\",\"Kazakhstan; Kyrgyzstan; Tajikistan; Turkmenistan; Uzbekistan ;\",\"British Indian Ocean Territory; Burundi; Comoros; Djibouti; Eritrea; Ethiopia; French Southern Territories; Kenya; Madagascar; Malawi; Mauritius; Mayotte; Mozambique; Rwanda; Réunion; Seychelles; Somalia; South Sudan; Uganda; United Republic of Tanzania; Zambia; Zimbabwe ;\",\"China; China, Hong Kong Special Administrative Region; China, Macao Special Administrative Region; Democratic People's Republic of Korea; Japan; Mongolia; Republic of Korea ;\",\"Belarus; Bulgaria; Czechia; Hungary; Poland; Republic of Moldova; Romania; Russian Federation; Slovakia; Ukraine ;\",\"Fiji; New Caledonia; Papua New Guinea; Solomon Islands; Vanuatu ;\",\"Guam; Kiribati; Marshall Islands; Micronesia (Federated States of); Nauru; Northern Mariana Islands; Palau; United States Minor Outlying Islands ;\",\"Angola; Cameroon; Central African Republic; Chad; Congo; Democratic Republic of the Congo; Equatorial Guinea; Gabon; Sao Tome and Principe ;\",\"Algeria; Egypt; Libya; Morocco; Sudan; Tunisia; Western Sahara ;\",\"Bermuda; Canada; Greenland; Saint Pierre and Miquelon; United States of America ;\",\"Denmark; Estonia; Faroe Islands; Finland; Guernsey; Iceland; Ireland; Isle of Man; Jersey; Latvia; Lithuania; Norway; Sark; Svalbard and Jan Mayen Islands; Sweden; United Kingdom of Great Britain and Northern Ireland; Åland Islands ;\",\"American Samoa; Cook Islands; French Polynesia; Niue; Pitcairn; Samoa; Tokelau; Tonga; Tuvalu; Wallis and Futuna Islands ;\",\"Argentina; Bolivia (Plurinational State of); Bouvet Island; Brazil; Chile; Colombia; Ecuador; Falkland Islands (Malvinas); French Guiana; Guyana; Paraguay; Peru; South Georgia and the South Sandwich Islands; Suriname; Uruguay; Venezuela (Bolivarian Republic of) ;\",\"Brunei Darussalam; Cambodia; Indonesia; Lao People's Democratic Republic; Malaysia; Myanmar; Philippines; Singapore; Thailand; Timor-Leste; Viet Nam ;\",\"Botswana; Eswatini; Lesotho; Namibia; South Africa ;\",\"Afghanistan; Bangladesh; Bhutan; India; Iran (Islamic Republic of); Maldives; Nepal; Pakistan; Sri Lanka ;\",\"Albania; Andorra; Bosnia and Herzegovina; Croatia; Gibraltar; Greece; Holy See; Italy; Malta; Montenegro; North Macedonia; Portugal; San Marino; Serbia; Slovenia; Spain ;\",\"Benin; Burkina Faso; Cabo Verde; Côte d’Ivoire; Gambia; Ghana; Guinea; Guinea-Bissau; Liberia; Mali; Mauritania; Niger; Nigeria; Saint Helena; Senegal; Sierra Leone; Togo ;\",\"Armenia; Azerbaijan; Bahrain; Cyprus; Georgia; Iraq; Israel; Jordan; Kuwait; Lebanon; Oman; Qatar; Saudi Arabia; State of Palestine; Syrian Arab Republic; Türkiye; United Arab Emirates; Yemen ;\",\"Austria; Belgium; France; Germany; Liechtenstein; Luxembourg; Monaco; Netherlands; Switzerland ;\"],[6,28,8,5,22,7,10,5,8,9,7,5,17,10,16,11,5,9,16,17,18,9]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Intermediate Region Name<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"Intermediate Region Name\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n:::\n::::::\n\nThe new regional group `Intermediate Region Name` is a classification\nscheme with **248 countries in\n22 regions**. As Antarctica is not\nincluded the grouping with `Intermediate Region Name` represents the\ncorrect M49 classification.\n\n## Un Countries {#sec-m49-un-member-states}\n\nThe UN M49 geoscheme classification data contains 15 columns and 248\nrows (= Columns or Areas). This is much more than the [currently 193\nmember states of the United\nNations](https://www.worldatlas.com/geography/how-many-countries-are-there-in-the-world.html).\nEven if we include Holy See (Vatican) and the State of Palestine, which\nare non-member observer states and the two controversial countries /\nareas (Taiwan & Kosovo) we are far from the 248 countries or areas\nlisted in the M49 geoscheme of the United Nations.\n\n### Procedure\n\n:::::: my-procedure\n:::: my-procedure-header\n::: {#prp-m49-un-countries}\n: Add Column for UN country membership\n:::\n::::\n\n::: my-procedure-container\nTo get only the 193 member states and the two non-member observer states\n(= 195 UN states) I will apply the following procedure:\n\n1.  Prepared a list with the names of the countries and their ISO-alpha3\n    codes. (The ISO-alpha3 code is important for the later joining with\n    the cleaned data `m49_clean.rds`). --- Done manually, no program\n    code.\n2.  Saved this two row data file manually as\n    \"data/unsd/un_countries.csv\". --- Done manually, no program code.\n3.  Load \"data/unsd/un_countries.csv\" into memory.\n4.  Add a new row `UN` (for UN member state) to the data, fill all\n    values with \"1\" (= member state).\n5.  Save the result as R object `un_countries.rds`\n6.  Load `m49_clean.rds` and `un_countries.rds`.\n7.  Join these two data frames as tibbles fully via their ISO code\n    columns.\n8.  Replace all `NA`s of the `UN` column (these rows did not come from\n    the \"un_countries\" file) with the value \"0\" (= non UN member state).\n9.  Delete the redundant `Country` column --- originally from the\n    \"un_countries\" file.\n10. Save the result as new R object `m49_clean3.rds`.\n11. Inspect the result.\n:::\n::::::\n\n### Result\n\n::::::: my-code-collection\n::::: my-code-collection-header\n::: my-code-collection-icon\n:::\n\n::: {#exm-m49-show-clean3-file}\n: Display structure and content of the adapted UN M49 geoscheme dataset\n:::\n:::::\n\n:::::: my-code-collection-container\n::: panel-tabset\n###### Structure\n\n:::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-m49-add-un-member-state-column}\n: Add column with UN membership\n:::\n::::\n\n::: my-r-code-container\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nun_countries <- readr::read_csv(\"data/unsd/un_countries.csv\",\n                                show_col_types = FALSE) |>       # (3)\n  dplyr::mutate(UN = \"1\")                                        # (4)\n  \npb_save_data_file(\"unsd\", un_countries, \"un_countries.rds\")      # (5)\n\nx <- base::readRDS(\"data/unsd/m49_clean2.rds\")                   # (6a)\ny <- base::readRDS(\"data/unsd/un_countries.rds\")                 # (6b)\n\nm49_clean3 <- dplyr::full_join(\n  x, y, dplyr::join_by(`ISO-alpha3 Code` == Code)\n  ) |>                                                           # (7)\n  dplyr::mutate(UN =\n        base::ifelse(base::is.na(UN), \"0\", UN)\n        ) |>                                                     # (8)\n  dplyr::select(-Country)                                        # (9)\n\npb_save_data_file(\"unsd\", m49_clean3, \"m49_clean3.rds\")          # (10)\n\nskimr::skim(m49_clean3)                                          # (11)\n```\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |           |\n|:------------------------|:----------|\n|Name                     |m49_clean3 |\n|Number of rows           |248        |\n|Number of columns        |14         |\n|_______________________  |           |\n|Column type frequency:   |           |\n|character                |14         |\n|________________________ |           |\n|Group variables          |None       |\n\n\n**Variable type: character**\n\n|skim_variable            | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:------------------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|ISO-alpha3 Code          |         1|             1|   3|   3|     0|      247|          0|\n|Country or Area          |         0|             1|   4|  52|     0|      248|          0|\n|Region Code              |         0|             1|   3|   3|     0|        5|          0|\n|Region Name              |         0|             1|   4|   8|     0|        5|          0|\n|Sub-region Code          |         0|             1|   3|   3|     0|       17|          0|\n|Sub-region Name          |         0|             1|   9|  31|     0|       17|          0|\n|Intermediate Region Code |         0|             1|   3|   3|     0|       22|          0|\n|Intermediate Region Name |         0|             1|   9|  25|     0|       22|          0|\n|M49 Code                 |         0|             1|   3|   3|     0|      248|          0|\n|ISO-alpha2 Code          |         1|             1|   2|   2|     0|      247|          0|\n|LDC                      |         0|             1|   1|   1|     0|        2|          0|\n|LLDC                     |         0|             1|   1|   1|     0|        2|          0|\n|SIDS                     |         0|             1|   1|   1|     0|        2|          0|\n|UN                       |         0|             1|   1|   1|     0|        2|          0|\n\n\n:::\n:::\n\n\n\n\n:::\n::::::\n\n###### UN members\n\n:::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-m49-show-un-member-states}\n: List the 193 UN member states (plus Vatican and Palestine as\nnon-member observers)\n:::\n::::\n\n::: my-r-code-container\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbase::readRDS(\"data/unsd/m49_clean3.rds\") |> \n  dplyr::filter(UN == \"1\") |> \n  dplyr::select(1,2,4,8) |> \n  DT::datatable()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-a5e0e1856a4f4bdcead0\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-a5e0e1856a4f4bdcead0\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"datafghanistan\",\"Albania\",\"Algeria\",\"Andorra\",\"Angola\",\"Antigua and Barbuda\",\"Argentina\",\"Armenia\",\"Australia\",\"Austria\",\"Azerbaijan\",\"Bahamas\",\"Bahrain\",\"Bangladesh\",\"Barbados\",\"Belarus\",\"Belgium\",\"Belize\",\"Benin\",\"Bhutan\",\"Bolivia (Plurinational State of)\",\"Bosnia and Herzegovina\",\"Botswana\",\"Brazil\",\"Brunei Darussalam\",\"Bulgaria\",\"Burkina Faso\",\"Burundi\",\"Cabo Verde\",\"Cambodia\",\"Cameroon\",\"Canada\",\"Central African Republic\",\"Chad\",\"Chile\",\"China\",\"Colombia\",\"Comoros\",\"Congo\",\"Costa Rica\",\"Croatia\",\"Cuba\",\"Cyprus\",\"Czechia\",\"Côte d’Ivoire\",\"Democratic People's Republic of Korea\",\"Democratic Republic of the Congo\",\"Denmark\",\"Djibouti\",\"Dominica\",\"Dominican Republic\",\"Ecuador\",\"Egypt\",\"El Salvador\",\"Equatorial Guinea\",\"Eritrea\",\"Estonia\",\"Eswatini\",\"Ethiopia\",\"Fiji\",\"Finland\",\"France\",\"Gabon\",\"Gambia\",\"Georgia\",\"Germany\",\"Ghana\",\"Greece\",\"Grenada\",\"Guatemala\",\"Guinea\",\"Guinea-Bissau\",\"Guyana\",\"Haiti\",\"Holy See\",\"Honduras\",\"Hungary\",\"Iceland\",\"India\",\"Indonesia\",\"Iran (Islamic Republic of)\",\"Iraq\",\"Ireland\",\"Israel\",\"Italy\",\"Jamaica\",\"Japan\",\"Jordan\",\"Kazakhstan\",\"Kenya\",\"Kiribati\",\"Kuwait\",\"Kyrgyzstan\",\"Lao People's Democratic Republic\",\"Latvia\",\"Lebanon\",\"Lesotho\",\"Liberia\",\"Libya\",\"Liechtenstein\",\"Lithuania\",\"Luxembourg\",\"Madagascar\",\"Malawi\",\"Malaysia\",\"Maldives\",\"Mali\",\"Malta\",\"Marshall Islands\",\"Mauritania\",\"Mauritius\",\"Mexico\",\"Micronesia (Federated States of)\",\"Monaco\",\"Mongolia\",\"Montenegro\",\"Morocco\",\"Mozambique\",\"Myanmar\",\"Namibia\",\"Nauru\",\"Nepal\",\"Netherlands\",\"New Zealand\",\"Nicaragua\",\"Niger\",\"Nigeria\",\"North Macedonia\",\"Norway\",\"Oman\",\"Pakistan\",\"Palau\",\"Panama\",\"Papua New Guinea\",\"Paraguay\",\"Peru\",\"Philippines\",\"Poland\",\"Portugal\",\"Qatar\",\"Republic of Korea\",\"Republic of Moldova\",\"Romania\",\"Russian Federation\",\"Rwanda\",\"Saint Kitts and Nevis\",\"Saint Lucia\",\"Saint Vincent and the Grenadines\",\"Samoa\",\"San Marino\",\"Sao Tome and Principe\",\"Saudi Arabia\",\"Senegal\",\"Serbia\",\"Seychelles\",\"Sierra Leone\",\"Singapore\",\"Slovakia\",\"Slovenia\",\"Solomon Islands\",\"Somalia\",\"South Africa\",\"South Sudan\",\"Spain\",\"Sri Lanka\",\"State of Palestine\",\"Sudan\",\"Suriname\",\"Sweden\",\"Switzerland\",\"Syrian Arab Republic\",\"Tajikistan\",\"Thailand\",\"Timor-Leste\",\"Togo\",\"Tonga\",\"Trinidad and Tobago\",\"Tunisia\",\"Turkmenistan\",\"Tuvalu\",\"Türkiye\",\"Uganda\",\"Ukraine\",\"United Arab Emirates\",\"United Kingdom of Great Britain and Northern Ireland\",\"United Republic of Tanzania\",\"United States of America\",\"Uruguay\",\"Uzbekistan\",\"Vanuatu\",\"Venezuela (Bolivarian Republic of)\",\"Viet Nam\",\"Yemen\",\"Zambia\",\"Zimbabwe\"],[\"Asia\",\"Europe\",\"Africa\",\"Europe\",\"Africa\",\"Americas\",\"Americas\",\"Asia\",\"Oceania\",\"Europe\",\"Asia\",\"Americas\",\"Asia\",\"Asia\",\"Americas\",\"Europe\",\"Europe\",\"Americas\",\"Africa\",\"Asia\",\"Americas\",\"Europe\",\"Africa\",\"Americas\",\"Asia\",\"Europe\",\"Africa\",\"Africa\",\"Africa\",\"Asia\",\"Africa\",\"Americas\",\"Africa\",\"Africa\",\"Americas\",\"Asia\",\"Americas\",\"Africa\",\"Africa\",\"Americas\",\"Europe\",\"Americas\",\"Asia\",\"Europe\",\"Africa\",\"Asia\",\"Africa\",\"Europe\",\"Africa\",\"Americas\",\"Americas\",\"Americas\",\"Africa\",\"Americas\",\"Africa\",\"Africa\",\"Europe\",\"Africa\",\"Africa\",\"Oceania\",\"Europe\",\"Europe\",\"Africa\",\"Africa\",\"Asia\",\"Europe\",\"Africa\",\"Europe\",\"Americas\",\"Americas\",\"Africa\",\"Africa\",\"Americas\",\"Americas\",\"Europe\",\"Americas\",\"Europe\",\"Europe\",\"Asia\",\"Asia\",\"Asia\",\"Asia\",\"Europe\",\"Asia\",\"Europe\",\"Americas\",\"Asia\",\"Asia\",\"Asia\",\"Africa\",\"Oceania\",\"Asia\",\"Asia\",\"Asia\",\"Europe\",\"Asia\",\"Africa\",\"Africa\",\"Africa\",\"Europe\",\"Europe\",\"Europe\",\"Africa\",\"Africa\",\"Asia\",\"Asia\",\"Africa\",\"Europe\",\"Oceania\",\"Africa\",\"Africa\",\"Americas\",\"Oceania\",\"Europe\",\"Asia\",\"Europe\",\"Africa\",\"Africa\",\"Asia\",\"Africa\",\"Oceania\",\"Asia\",\"Europe\",\"Oceania\",\"Americas\",\"Africa\",\"Africa\",\"Europe\",\"Europe\",\"Asia\",\"Asia\",\"Oceania\",\"Americas\",\"Oceania\",\"Americas\",\"Americas\",\"Asia\",\"Europe\",\"Europe\",\"Asia\",\"Asia\",\"Europe\",\"Europe\",\"Europe\",\"Africa\",\"Americas\",\"Americas\",\"Americas\",\"Oceania\",\"Europe\",\"Africa\",\"Asia\",\"Africa\",\"Europe\",\"Africa\",\"Africa\",\"Asia\",\"Europe\",\"Europe\",\"Oceania\",\"Africa\",\"Africa\",\"Africa\",\"Europe\",\"Asia\",\"Asia\",\"Africa\",\"Americas\",\"Europe\",\"Europe\",\"Asia\",\"Asia\",\"Asia\",\"Asia\",\"Africa\",\"Oceania\",\"Americas\",\"Africa\",\"Asia\",\"Oceania\",\"Asia\",\"Africa\",\"Europe\",\"Asia\",\"Europe\",\"Africa\",\"Americas\",\"Americas\",\"Asia\",\"Oceania\",\"Americas\",\"Asia\",\"Asia\",\"Africa\",\"Africa\"],[\"Southern Asia\",\"Southern Europe\",\"Northern Africa\",\"Southern Europe\",\"Middle Africa\",\"Caribbean\",\"South America\",\"Western Asia\",\"Australia and New Zealand\",\"Western Europe\",\"Western Asia\",\"Caribbean\",\"Western Asia\",\"Southern Asia\",\"Caribbean\",\"Eastern Europe\",\"Western Europe\",\"Central America\",\"Western Africa\",\"Southern Asia\",\"South America\",\"Southern Europe\",\"Southern Africa\",\"South America\",\"South-eastern Asia\",\"Eastern Europe\",\"Western Africa\",\"Eastern Africa\",\"Western Africa\",\"South-eastern Asia\",\"Middle Africa\",\"Northern America\",\"Middle Africa\",\"Middle Africa\",\"South America\",\"Eastern Asia\",\"South America\",\"Eastern Africa\",\"Middle Africa\",\"Central America\",\"Southern Europe\",\"Caribbean\",\"Western Asia\",\"Eastern Europe\",\"Western Africa\",\"Eastern Asia\",\"Middle Africa\",\"Northern Europe\",\"Eastern Africa\",\"Caribbean\",\"Caribbean\",\"South America\",\"Northern Africa\",\"Central America\",\"Middle Africa\",\"Eastern Africa\",\"Northern Europe\",\"Southern Africa\",\"Eastern Africa\",\"Melanesia\",\"Northern Europe\",\"Western Europe\",\"Middle Africa\",\"Western Africa\",\"Western Asia\",\"Western Europe\",\"Western Africa\",\"Southern Europe\",\"Caribbean\",\"Central America\",\"Western Africa\",\"Western Africa\",\"South America\",\"Caribbean\",\"Southern Europe\",\"Central America\",\"Eastern Europe\",\"Northern Europe\",\"Southern Asia\",\"South-eastern Asia\",\"Southern Asia\",\"Western Asia\",\"Northern Europe\",\"Western Asia\",\"Southern Europe\",\"Caribbean\",\"Eastern Asia\",\"Western Asia\",\"Central Asia\",\"Eastern Africa\",\"Micronesia\",\"Western Asia\",\"Central Asia\",\"South-eastern Asia\",\"Northern Europe\",\"Western Asia\",\"Southern Africa\",\"Western Africa\",\"Northern Africa\",\"Western Europe\",\"Northern Europe\",\"Western Europe\",\"Eastern Africa\",\"Eastern Africa\",\"South-eastern Asia\",\"Southern Asia\",\"Western Africa\",\"Southern Europe\",\"Micronesia\",\"Western Africa\",\"Eastern Africa\",\"Central America\",\"Micronesia\",\"Western Europe\",\"Eastern Asia\",\"Southern Europe\",\"Northern Africa\",\"Eastern Africa\",\"South-eastern Asia\",\"Southern Africa\",\"Micronesia\",\"Southern Asia\",\"Western Europe\",\"Australia and New Zealand\",\"Central America\",\"Western Africa\",\"Western Africa\",\"Southern Europe\",\"Northern Europe\",\"Western Asia\",\"Southern Asia\",\"Micronesia\",\"Central America\",\"Melanesia\",\"South America\",\"South America\",\"South-eastern Asia\",\"Eastern Europe\",\"Southern Europe\",\"Western Asia\",\"Eastern Asia\",\"Eastern Europe\",\"Eastern Europe\",\"Eastern Europe\",\"Eastern Africa\",\"Caribbean\",\"Caribbean\",\"Caribbean\",\"Polynesia\",\"Southern Europe\",\"Middle Africa\",\"Western Asia\",\"Western Africa\",\"Southern Europe\",\"Eastern Africa\",\"Western Africa\",\"South-eastern Asia\",\"Eastern Europe\",\"Southern Europe\",\"Melanesia\",\"Eastern Africa\",\"Southern Africa\",\"Eastern Africa\",\"Southern Europe\",\"Southern Asia\",\"Western Asia\",\"Northern Africa\",\"South America\",\"Northern Europe\",\"Western Europe\",\"Western Asia\",\"Central Asia\",\"South-eastern Asia\",\"South-eastern Asia\",\"Western Africa\",\"Polynesia\",\"Caribbean\",\"Northern Africa\",\"Central Asia\",\"Polynesia\",\"Western Asia\",\"Eastern Africa\",\"Eastern Europe\",\"Western Asia\",\"Northern Europe\",\"Eastern Africa\",\"Northern America\",\"South America\",\"Central Asia\",\"Melanesia\",\"South America\",\"South-eastern Asia\",\"Western Asia\",\"Eastern Africa\",\"Eastern Africa\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>ISO-alpha3 Code<\\/th>\\n      <th>Country or Area<\\/th>\\n      <th>Region Name<\\/th>\\n      <th>Intermediate Region Name<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"ISO-alpha3 Code\",\"targets\":1},{\"name\":\"Country or Area\",\"targets\":2},{\"name\":\"Region Name\",\"targets\":3},{\"name\":\"Intermediate Region Name\",\"targets\":4}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n:::\n::::::\n\n###### Non-UN members\n\n:::::: my-r-code\n:::: my-r-code-header\n::: {#cnj-show-non-un-member-states}\n: List the 193 UN member states (plus Vatican and Palestine as\nnon-member observers)\n:::\n::::\n\n::: my-r-code-container\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbase::readRDS(\"data/unsd/m49_clean3.rds\") |> \n  dplyr::filter(UN == \"0\") |> \n  dplyr::select(1,2,4,8) |> \n  DT::datatable()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-34fdee3815a82308ca9c\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-34fdee3815a82308ca9c\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\"],[\"ASM\",\"AIA\",\"ABW\",\"BMU\",\"BES\",\"BVT\",\"IOT\",\"VGB\",\"CYM\",\"HKG\",\"MAC\",\"CXR\",\"CCK\",\"COK\",\"CUW\",\"FLK\",\"FRO\",\"GUF\",\"PYF\",\"ATF\",\"GIB\",\"GRL\",\"GLP\",\"GUM\",\"GGY\",\"HMD\",\"IMN\",\"JEY\",\"MTQ\",\"MYT\",\"MSR\",\"NCL\",\"NIU\",\"NFK\",\"MNP\",\"PCN\",\"PRI\",\"REU\",\"BLM\",\"SHN\",\"MAF\",\"SPM\",null,\"SXM\",\"SGS\",\"SJM\",\"TKL\",\"TCA\",\"UMI\",\"VIR\",\"WLF\",\"ESH\",\"ALA\"],[\"American Samoa\",\"Anguilla\",\"Aruba\",\"Bermuda\",\"Bonaire, Sint Eustatius and Saba\",\"Bouvet Island\",\"British Indian Ocean Territory\",\"British Virgin Islands\",\"Cayman Islands\",\"China, Hong Kong Special Administrative Region\",\"China, Macao Special Administrative Region\",\"Christmas Island\",\"Cocos (Keeling) Islands\",\"Cook Islands\",\"Curaçao\",\"Falkland Islands (Malvinas)\",\"Faroe Islands\",\"French Guiana\",\"French Polynesia\",\"French Southern Territories\",\"Gibraltar\",\"Greenland\",\"Guadeloupe\",\"Guam\",\"Guernsey\",\"Heard Island and McDonald Islands\",\"Isle of Man\",\"Jersey\",\"Martinique\",\"Mayotte\",\"Montserrat\",\"New Caledonia\",\"Niue\",\"Norfolk Island\",\"Northern Mariana Islands\",\"Pitcairn\",\"Puerto Rico\",\"Réunion\",\"Saint Barthélemy\",\"Saint Helena\",\"Saint Martin (French Part)\",\"Saint Pierre and Miquelon\",\"Sark\",\"Sint Maarten (Dutch part)\",\"South Georgia and the South Sandwich Islands\",\"Svalbard and Jan Mayen Islands\",\"Tokelau\",\"Turks and Caicos Islands\",\"United States Minor Outlying Islands\",\"United States Virgin Islands\",\"Wallis and Futuna Islands\",\"Western Sahara\",\"Åland Islands\"],[\"Oceania\",\"Americas\",\"Americas\",\"Americas\",\"Americas\",\"Americas\",\"Africa\",\"Americas\",\"Americas\",\"Asia\",\"Asia\",\"Oceania\",\"Oceania\",\"Oceania\",\"Americas\",\"Americas\",\"Europe\",\"Americas\",\"Oceania\",\"Africa\",\"Europe\",\"Americas\",\"Americas\",\"Oceania\",\"Europe\",\"Oceania\",\"Europe\",\"Europe\",\"Americas\",\"Africa\",\"Americas\",\"Oceania\",\"Oceania\",\"Oceania\",\"Oceania\",\"Oceania\",\"Americas\",\"Africa\",\"Americas\",\"Africa\",\"Americas\",\"Americas\",\"Europe\",\"Americas\",\"Americas\",\"Europe\",\"Oceania\",\"Americas\",\"Oceania\",\"Americas\",\"Oceania\",\"Africa\",\"Europe\"],[\"Polynesia\",\"Caribbean\",\"Caribbean\",\"Northern America\",\"Caribbean\",\"South America\",\"Eastern Africa\",\"Caribbean\",\"Caribbean\",\"Eastern Asia\",\"Eastern Asia\",\"Australia and New Zealand\",\"Australia and New Zealand\",\"Polynesia\",\"Caribbean\",\"South America\",\"Northern Europe\",\"South America\",\"Polynesia\",\"Eastern Africa\",\"Southern Europe\",\"Northern America\",\"Caribbean\",\"Micronesia\",\"Northern Europe\",\"Australia and New Zealand\",\"Northern Europe\",\"Northern Europe\",\"Caribbean\",\"Eastern Africa\",\"Caribbean\",\"Melanesia\",\"Polynesia\",\"Australia and New Zealand\",\"Micronesia\",\"Polynesia\",\"Caribbean\",\"Eastern Africa\",\"Caribbean\",\"Western Africa\",\"Caribbean\",\"Northern America\",\"Northern Europe\",\"Caribbean\",\"South America\",\"Northern Europe\",\"Polynesia\",\"Caribbean\",\"Micronesia\",\"Caribbean\",\"Polynesia\",\"Northern Africa\",\"Northern Europe\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>ISO-alpha3 Code<\\/th>\\n      <th>Country or Area<\\/th>\\n      <th>Region Name<\\/th>\\n      <th>Intermediate Region Name<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"ISO-alpha3 Code\",\"targets\":1},{\"name\":\"Country or Area\",\"targets\":2},{\"name\":\"Region Name\",\"targets\":3},{\"name\":\"Intermediate Region Name\",\"targets\":4}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n:::\n::::\n:::::\n::::::\n:::::::\n\n## Summary {#sec-m49-summary}\n\nThe UN M49 geoscheme data contains 249 countries or areas This includes\n193 UN members, 2 non-member states with observer status, Antartica and 53\ndependent territories. With the exception of Sark all of this regions have ISO-alpha2 and\nISO-alpha3 codes `ISO-alpha2 Code` and `ISO-alpha3 Code`. These two columns are important, because\nthey facilitate joining data from other sources via this standardized codes. This is\ncrucial because the spelling of the names of countries and areas is\nnot always identical in the different sources. You can't therefore often\nnot join two data sets just by country or area name but needs a more\nsystematic approach with the ISO codes.\n\nUN M49 geoscheme classification has three regional division with 5, 17\nand 22 groups (always without Antarctica and not counting the overall\ngroup \"World\" with code \"001\").\n\nAbout the three grouping we can say (always not including Antarctica):\n\n-   **Region**: It consists of five groups representing more or less the\n    continents. But instead of the traditional separation between\n    Northern and Southern America it unites these two continents into\n    the \"Americas\", including also the Caribbean countries.\n-   **Sub-region**: It consists of 17 groups by dividing some of the\n    continents into very big sub-regions. For instance the many African\n    countries are grouped only into two groups: Northern Africa and\n    Sub-Saharan Africa. This is in contrast to the more detailed\n    \"Intermediate region\" where we have Northern-, Eastern, Western,\n    Southern and Middle Africa. On the other hand the smaller Europe is divided into\n    four sub-regions. The sub-regional division is in my opinion therefore not a\n    very consistent classification.\n-   **Intermediate region**: It consists of 22 groups and is for\n    statistical purposes the most detailed **regional** classification.\n    \nAdditonally there are with <a class='glossary' title='Least Developing Countries (LCD) are — according to the United Nations Statistics Division (UNSD) and the Standard Country or Area Codes for Statistical Use (M49) — currently 45 economies designated as Least Developed Countries (LDCs). These countries are entitled to preferential market access, aid, special technical assistance, and capacity-building on technology, among other concessions.'>LDC</a>, <a class='glossary' title='Landlocked Developing Countries (LLDCs) are a group of 32 countries, as categorized by the United Nations Statistics Division (UNSD) in the M49 specification. The LLDCs include some of the poorest countries in the world, with a lack of territorial access to the sea, which can hinder their economic development. This group of countries faces specific challenges due to their landlocked status, including higher transportation costs, reduced trade opportunities, and limited access to international markets.'>LLDC</a> and <a class='glossary' title='Small Island Developing States (SIDS) are a group of developing countries that are small island countries and small states that tend to share similar sustainable development challenges. These challenges include small but growing populations, limited resources, remoteness, susceptibility to natural disasters, vulnerability to external shocks, excessive dependence on international trade, and fragile environments.'>SIDS</a> three other divisions, driven not by regional reasons but by geographical common features. As we will see in the other chapters there are --- besides of the UN M49 geoscheme --- other approaches for a consistent country classification.\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/datatables-binding-0.33/datatables.js\"></script>\n<script src=\"site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n<link href=\"site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}