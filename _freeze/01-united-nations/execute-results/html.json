{
  "hash": "1d3880ec5f9a868b60d5f0599a119ac1",
  "result": {
    "engine": "knitr",
    "markdown": "# M49 Classification {#sec-m49}\n\n\n\n\n\n\n\n\n\n\n\n## Objectives {#sec-m49-objectives}\n\n:::::: {#obj-un-objectives}\n::::: my-objectives\n::: my-objectives-header\nChapter section list\n:::\n\n::: my-objectives-container\n1. Locate the file for the UN M49 geoscheme classification data, get it and save it as raw data (@sec-download-m49).\n2. Inspect the data thoroughly (@sec-inspect-m49-raw).\n3. Clean the data (first step) (@sec-clean-data-1).\n4. Display the grouping results (@sec-display-result-1).\n5. Clean the intermediate region to get the official results (@sec-clean-data-2).\n6. Display the new intermediate region group (@sec-display-result-2).\n:::\n:::::\n::::::\n\n## Download M49 Data {#sec-download-m49}\n\nAn important --- maybe the most authoritative --- classification system\nis developed and maintained by the United Nations. It is expressively\ndeveloped for statistical purposes by the United Nations Statistics\nDivision <a class='glossary' title='The United Nations Statistics Division (UNSD) is committed to the advancement of the global statistical system. It compiles and disseminates global statistical information, develop standards and norms for statistical activities, and support countries’ efforts to strengthen their national statistical systems.'>UNSD</a> using the <a class='glossary' title='The United Nations publication “Standard Country or Area Codes for Statistical Use” was originally published as Series M, No. 49 and is now commonly referred to as the M49 standard. M49 is a country/areas classification system prepared by the Statistics Division of the United Nations Secretariat primarily for use in its publications and databases.'>M49</a> methodology.\n\nThe result is called [Standard country or area codes for statistical use\n(M49)](https://unstats.un.org/unsd/methodology/m49/) and can be\ndownloaded manually in different languages and formats (Copy into the\nclipboard, Excel or CSV) from the [United Nations Methodology Overview\npage](https://unstats.un.org/unsd/methodology/m49/overview/).\n\n::::::: my-resource\n:::: my-resource-header\n::: {#lem-unsd.m49}\n: United Nations Statistics Division M49 Classification\n:::\n::::\n\n:::: my-resource-container\n-   [Manual\n    download](https://unstats.un.org/unsd/methodology/m49/overview/):\n    The standard country or area codes for statistical use (M49) is\n    available in different languages (English, Chinese, Russian, French,\n    Spanish, Arabic) by clicking one of the buttons \"Copy\", \"Excel\" or\n    \"CSV\". On this page is no URL for an programmable download with an R\n    script available, because Javascript triggers the buttons mentioned\n    above.\n-   [Automatic download by OMNIKA\n    store](https://github.com/omnika-datastore/unsd-m49-standard-area-codes):\n    I found with [OMNIKA\n    DataStore](https://omnika.org/datastore)[^01-united-nations-1] an\n    external source to download the classification file via R\n    script[^01-united-nations-2].\n\nThe <a class='glossary' title='OMNIKA is an American 501©(3) nonprofit organization that operates a digital mythological library. Almost every culture has relevant mythology that explains where we came from, why things are the way they are, and a number of other things. OMNIKA’s goal is to collect, organize, index, and quantify all of those data in one place and make them available for free. (https://omnika.org/info/about)'>OMNIKA</a> URLs for download are:\n\n-   **EXCEL**:\n    [2022-09-24\\_\\_Excel_UNSD_M49.xlsx](https://github.com/omnika-datastore/unsd-m49-standard-area-codes/raw/refs/heads/main/2022-09-24__Excel_UNSD_M49.xlsx)\n-   **CSV**:\n    [2022-09-24\\_\\_CSV_UNSD_M49.csv](https://github.com/omnika-datastore/unsd-m49-standard-area-codes/raw/refs/heads/main/2022-09-24__CSV_UNSD_M49.csv)\n\n::::\n:::::::\n\n[^01-united-nations-1]: OMNIKA DataStore is an open-access data science\n    resource for researchers, authors, and technologists. It is 501c3\n    nonprofit organization whose mission is to digitize, organize, and\n    make important (free) contents available for the general public. The\n    service provides raw data from trusted sources, data visualizations,\n    data analysis tools, and other digital resources.\n\n[^01-united-nations-2]: A check with `base::all.equal()` turned out that\n    the files from the two different sources (UNSD and OMNIKA) are\n    identical.\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-download-unsd-classification}\n: Download the United Nations M49 Classification\n::::::\n:::\n::::{.my-r-code-container}\n\n<center>**Run this code chunk manually if the file still needs to be downloaded.**</center>\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"show\"}\n## create folders ###########\npb_create_folder(base::paste0(here::here(), \"/data/\"))\npb_create_folder(base::paste0(here::here(), \"/data/unsd\"))\n\n## download m49 file ############\nurl <- \"https://github.com/omnika-datastore/unsd-m49-standard-area-codes/raw/refs/heads/main/2022-09-24__CSV_UNSD_M49.csv\"\n\ndownloader::download(\n    url = url,\n    destfile = base::paste0(here::here(), \n            \"/data/unsd/m49_raw.csv\")\n)\n\n\n## create R object ###############\nm49_raw <- \n  readr::read_delim(\n    file = base::paste0(here::here(), \n    \"/data/unsd/m49_raw.csv\"),\n    delim = \";\"\n  )\n\n\n## save as .rds file ################\npb_save_data_file(\n  \"unsd\", \n  m49_raw, \n  \"m49_raw.rds\")\n```\n:::\n\n\n\n\n\n<center>(*For this R code chunk is no output available*)</center>\n\n::::\n:::::\n\n## Inspect M49 Data {#sec-inspect-m49-raw}\n\nTo get an detailed understanding of the data structures I will provide the following two outputs of the raw-data:\n\n1. A summary statistics with `skimr::skim()` followed by inspection of the first data rows with `dplyr::glimpse()`.\n2. Several detailed outputs of the classifications categories (regions) and their elements (countries) in different code chunks (tabs).\n\nTo facilitate the second task I have prepared the function `pb_class_scheme()` and stored in \"R./helper.r\".\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-inspect-m49-raw}\n: Inspect raw data of the UNSD M49 geoscheme classification\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm49_raw <- base::readRDS(\"data/unsd/m49_raw.rds\")\nglue::glue(\"******************* Using skimr::skim() ***************************\")\nskimr::skim(m49_raw)\nglue::glue(\"\")\nglue::glue(\"****************** Using dplyr::glimpse() *************************\")\ndplyr::glimpse(m49_raw)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> ******************* Using skimr::skim() ***************************\n```\n\n\n:::\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |        |\n|:------------------------|:-------|\n|Name                     |m49_raw |\n|Number of rows           |249     |\n|Number of columns        |15      |\n|_______________________  |        |\n|Column type frequency:   |        |\n|character                |15      |\n|________________________ |        |\n|Group variables          |None    |\n\n\n**Variable type: character**\n\n|skim_variable                           | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:---------------------------------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|Global Code                             |         0|          1.00|   3|   3|     0|        1|          0|\n|Global Name                             |         0|          1.00|   5|   5|     0|        1|          0|\n|Region Code                             |         1|          1.00|   3|   3|     0|        5|          0|\n|Region Name                             |         1|          1.00|   4|   8|     0|        5|          0|\n|Sub-region Code                         |         1|          1.00|   3|   3|     0|       17|          0|\n|Sub-region Name                         |         1|          1.00|   9|  31|     0|       17|          0|\n|Intermediate Region Code                |       141|          0.43|   3|   3|     0|        8|          0|\n|Intermediate Region Name                |       141|          0.43|   9|  15|     0|        8|          0|\n|Country or Area                         |         0|          1.00|   4|  52|     0|      249|          0|\n|M49 Code                                |         0|          1.00|   3|   3|     0|      249|          0|\n|ISO-alpha2 Code                         |         2|          0.99|   2|   2|     0|      247|          0|\n|ISO-alpha3 Code                         |         1|          1.00|   3|   3|     0|      248|          0|\n|Least Developed Countries (LDC)         |       203|          0.18|   1|   1|     0|        1|          0|\n|Land Locked Developing Countries (LLDC) |       217|          0.13|   1|   1|     0|        1|          0|\n|Small Island Developing States (SIDS)   |       196|          0.21|   1|   1|     0|        1|          0|\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> \n#> ****************** Using dplyr::glimpse() *************************\n#> Rows: 249\n#> Columns: 15\n#> $ `Global Code`                             <chr> \"001\", \"001\", \"001\", \"001\", …\n#> $ `Global Name`                             <chr> \"World\", \"World\", \"World\", \"…\n#> $ `Region Code`                             <chr> \"002\", \"002\", \"002\", \"002\", …\n#> $ `Region Name`                             <chr> \"Africa\", \"Africa\", \"Africa\"…\n#> $ `Sub-region Code`                         <chr> \"015\", \"015\", \"015\", \"015\", …\n#> $ `Sub-region Name`                         <chr> \"Northern Africa\", \"Northern…\n#> $ `Intermediate Region Code`                <chr> NA, NA, NA, NA, NA, NA, NA, …\n#> $ `Intermediate Region Name`                <chr> NA, NA, NA, NA, NA, NA, NA, …\n#> $ `Country or Area`                         <chr> \"Algeria\", \"Egypt\", \"Libya\",…\n#> $ `M49 Code`                                <chr> \"012\", \"818\", \"434\", \"504\", …\n#> $ `ISO-alpha2 Code`                         <chr> \"DZ\", \"EG\", \"LY\", \"MA\", \"SD\"…\n#> $ `ISO-alpha3 Code`                         <chr> \"DZA\", \"EGY\", \"LBY\", \"MAR\", …\n#> $ `Least Developed Countries (LDC)`         <chr> NA, NA, NA, NA, \"x\", NA, NA,…\n#> $ `Land Locked Developing Countries (LLDC)` <chr> NA, NA, NA, NA, NA, NA, NA, …\n#> $ `Small Island Developing States (SIDS)`   <chr> NA, NA, NA, NA, NA, NA, NA, …\n```\n\n\n:::\n:::\n\n\n\n\n\n::::\n:::::\n\nThe file has 15 columns as you can also see online from the [Overview\npage](https://unstats.un.org/unsd/methodology/m49/overview/). \n\nThe many missing values (`NAs`) for the categories <a class='glossary' title='Least Developing Countries (LCD) are — according to the United Nations Statistics Division (UNSD) and the Standard Country or Area Codes for Statistical Use (M49) — currently 45 economies designated as Least Developed Countries (LDCs). These countries are entitled to preferential market access, aid, special technical assistance, and capacity-building on technology, among other concessions.'>LDC</a>, <a class='glossary' title='Landlocked Developing Countries (LLDCs) are a group of 32 countries, as categorized by the United Nations Statistics Division (UNSD) in the M49 specification. The LLDCs include some of the poorest countries in the world, with a lack of territorial access to the sea, which can hinder their economic development. This group of countries faces specific challenges due to their landlocked status, including higher transportation costs, reduced trade opportunities, and limited access to international markets.'>LLDC</a> and <a class='glossary' title='Small Island Developing States (SIDS) are a group of developing countries that are small island countries and small states that tend to share similar sustainable development challenges. These challenges include small but growing populations, limited resources, remoteness, susceptibility to natural disasters, vulnerability to external shocks, excessive dependence on international trade, and fragile environments.'>SIDS</a> are easy explained: These three columns are coded with an 'x' if the country of this row belong to this category. Recoding these three columns with 1 and 0 (1 = yes, belongs to this category, 0 = no, does not belong to this category) will reduce most of their missing values.\n\nOne missing value in the regional categories (Region, Sub-Region and Intermediate Region) is related to Antarctica which is not seen by the M49 scheme as a separated region. It has therefore no regional codes and names with the exception of the overall comprising global region. But it has M49 as well ISO-alpha codes.\n\nOne of the missing values for ISO-alpha2 and ISO-alpha3 is related to Sark, which is \"recognized by the United Nations Statistics Division (UNSD) as a separate territory\" but was not accepted by ISO now for more than 20 years [@mccarthy-2020]. Recently a new application (see [PDF](https://www.sarkid.org/assets/pdf/SarkID%20Identity%20info%20v1_2.pdf)) will change that but currently Sark is still waiting for [ISO 3166 codes](https://www.iso.org/iso-3166-country-codes.html).\n\nThe other missing value for ISO-alpha2 codes belongs to Namibia because its abbreviation `NA` is interpreted by R as a missing value!\n\n## Clean Data (first step) {#sec-clean-data-1}\n\n### Procedure\n\n:::::{.my-procedure}\n:::{.my-procedure-header}\n:::::: {#prp-clean-m49-1}\n: Clean M49 data of the UNSD geoscheme classification (first step)\n::::::\n:::\n::::{.my-procedure-container}\n1. Remove the global codes and global names because they a redundant: All rows have global code \"001\" (\"World\").\n2. Shorten long names to their abbreviation (\"LCD\", \"LLCD\" and \"SIDS\").\n3. Remove row \"Antarctica\" because it is not seen as separate country.\n4. Replace `NA` in the column ISO-alpha2 Code\" of Namibia with the string \"NA\".\n5. Recode the columns <a class='glossary' title='Least Developing Countries (LCD) are — according to the United Nations Statistics Division (UNSD) and the Standard Country or Area Codes for Statistical Use (M49) — currently 45 economies designated as Least Developed Countries (LDCs). These countries are entitled to preferential market access, aid, special technical assistance, and capacity-building on technology, among other concessions.'>LDC</a>, <a class='glossary' title='Landlocked Developing Countries (LLDCs) are a group of 32 countries, as categorized by the United Nations Statistics Division (UNSD) in the M49 specification. The LLDCs include some of the poorest countries in the world, with a lack of territorial access to the sea, which can hinder their economic development. This group of countries faces specific challenges due to their landlocked status, including higher transportation costs, reduced trade opportunities, and limited access to international markets.'>LLDC</a> and <a class='glossary' title='Small Island Developing States (SIDS) are a group of developing countries that are small island countries and small states that tend to share similar sustainable development challenges. These challenges include small but growing populations, limited resources, remoteness, susceptibility to natural disasters, vulnerability to external shocks, excessive dependence on international trade, and fragile environments.'>SIDS</a> with 0 and 1.\n6. Relocate  columns `ISO-alpha3 CODE` and `Country or Area` to the first two columns because these two columns are always relevant for the later groupings and joining with groupings from other sources.\n7. Sort the data alphabetically by `Country or Area`.\n::::\n:::::\n\n### Result (first step) {#sec-display-result-1}\n\n#### Data Structure\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-clean-m49-1}\n: Clean UNSD M49 geoscheme classification data (first step)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## column renaming vector ########\nm49_cols = c(\n  LDC = \"Least Developed Countries (LDC)\", \n  LLDC = \"Land Locked Developing Countries (LLDC)\", \n  SIDS = \"Small Island Developing States (SIDS)\"\n  )\n\n\n## clean data ###############################\nm49_clean <- base::readRDS(\"data/unsd/m49_raw.rds\") |> \n  dplyr::select(-(1:2)) |> # (1)\n  dplyr::rename(tidyselect::all_of(m49_cols)) |> # (2) \n  dplyr::filter(`Country or Area` != \"Antarctica\") |> # (3)\n  dplyr::mutate(`ISO-alpha2 Code` = \n      base::ifelse(`Country or Area` == \"Namibia\", \"NA\", `ISO-alpha2 Code`)) |> # (4)\n  dplyr::relocate(\n      ## any_of() does not understand object names (??)\n      tidyselect::any_of(c(\"ISO-alpha3 Code\", \"Country or Area\")), .before = `Region Code`) |> # (5)\n  # .x = anonymous function; \"x\" = value in cols of m40_clean\n  dplyr::mutate(dplyr::across(\n    LDC:SIDS, ~ dplyr::if_else(.x == \"x\", \"1\", \"999\", \"0\") \n    )) |> # (6)\n  dplyr::arrange(`Country or Area`) # (7)\n\n## save new tibble ##########\npb_save_data_file(\n  \"unsd\",\n  m49_clean,\n  \"m49_clean.rds\"\n)\n\n## display results ##########\nm49_clean <- base::readRDS(\"data/unsd/m49_clean.rds\")\nglue::glue(\"******************* Using skimr::skim() ***************************\")\nskimr::skim(m49_clean)\nglue::glue(\"\")\nglue::glue(\"****************** Using dplyr::glimpse() *************************\")\ndplyr::glimpse(m49_clean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> ******************* Using skimr::skim() ***************************\n```\n\n\n:::\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |          |\n|:------------------------|:---------|\n|Name                     |m49_clean |\n|Number of rows           |248       |\n|Number of columns        |13        |\n|_______________________  |          |\n|Column type frequency:   |          |\n|character                |13        |\n|________________________ |          |\n|Group variables          |None      |\n\n\n**Variable type: character**\n\n|skim_variable            | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:------------------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|ISO-alpha3 Code          |         1|          1.00|   3|   3|     0|      247|          0|\n|Country or Area          |         0|          1.00|   4|  52|     0|      248|          0|\n|Region Code              |         0|          1.00|   3|   3|     0|        5|          0|\n|Region Name              |         0|          1.00|   4|   8|     0|        5|          0|\n|Sub-region Code          |         0|          1.00|   3|   3|     0|       17|          0|\n|Sub-region Name          |         0|          1.00|   9|  31|     0|       17|          0|\n|Intermediate Region Code |       140|          0.44|   3|   3|     0|        8|          0|\n|Intermediate Region Name |       140|          0.44|   9|  15|     0|        8|          0|\n|M49 Code                 |         0|          1.00|   3|   3|     0|      248|          0|\n|ISO-alpha2 Code          |         1|          1.00|   2|   2|     0|      247|          0|\n|LDC                      |         0|          1.00|   1|   1|     0|        2|          0|\n|LLDC                     |         0|          1.00|   1|   1|     0|        2|          0|\n|SIDS                     |         0|          1.00|   1|   1|     0|        2|          0|\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> \n#> ****************** Using dplyr::glimpse() *************************\n#> Rows: 248\n#> Columns: 13\n#> $ `ISO-alpha3 Code`          <chr> \"AFG\", \"ALB\", \"DZA\", \"ASM\", \"AND\", \"AGO\", \"…\n#> $ `Country or Area`          <chr> \"Afghanistan\", \"Albania\", \"Algeria\", \"Ameri…\n#> $ `Region Code`              <chr> \"142\", \"150\", \"002\", \"009\", \"150\", \"002\", \"…\n#> $ `Region Name`              <chr> \"Asia\", \"Europe\", \"Africa\", \"Oceania\", \"Eur…\n#> $ `Sub-region Code`          <chr> \"034\", \"039\", \"015\", \"061\", \"039\", \"202\", \"…\n#> $ `Sub-region Name`          <chr> \"Southern Asia\", \"Southern Europe\", \"Northe…\n#> $ `Intermediate Region Code` <chr> NA, NA, NA, NA, NA, \"017\", \"029\", \"029\", \"0…\n#> $ `Intermediate Region Name` <chr> NA, NA, NA, NA, NA, \"Middle Africa\", \"Carib…\n#> $ `M49 Code`                 <chr> \"004\", \"008\", \"012\", \"016\", \"020\", \"024\", \"…\n#> $ `ISO-alpha2 Code`          <chr> \"AF\", \"AL\", \"DZ\", \"AS\", \"AD\", \"AO\", \"AI\", \"…\n#> $ LDC                        <chr> \"1\", \"0\", \"0\", \"0\", \"0\", \"1\", \"0\", \"0\", \"0\"…\n#> $ LLDC                       <chr> \"1\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\"…\n#> $ SIDS                       <chr> \"0\", \"0\", \"0\", \"1\", \"0\", \"0\", \"1\", \"1\", \"0\"…\n```\n\n\n:::\n:::\n\n\n\n\n\n***\n\nAs  explained above, only Sark has no value for `ISO-alpha2 Code` and `ISO-alpha3 Code` .\n::::\n:::::\n\n\n#### Regional Groups\n\nAs we can see from @cnj-clean-m49-1 the M49 classification of the United Nations knows three different regional groups (in addition to the overall region `World`.)\n\n::: {.my-code-collection}\n:::: {.my-code-collection-header}\n::::: {.my-code-collection-icon}\n:::::\n:::::: {#exm-show-regional-groups}\n: Display different regional groups\n::::::\n\n::::\n\n::::{.my-code-collection-container}\n\n::: {.panel-tabset}\n\n###### Region\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-show-region-group}\n: Show Regions of the UNSD M49 Geoscheme\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(\n    m49_region <-  pb_class_scheme(\n            df = base::readRDS(\"data/unsd/m49_clean.rds\"),\n            sel1 = rlang::quo(`Country or Area`),\n            sel2 = rlang::quo(`Region Name`)\n        )\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-17015f1807bc6ba223f2\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-17015f1807bc6ba223f2\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\"],[\"Africa\",\"Americas\",\"Asia\",\"Europe\",\"Oceania\"],[\"Algeria; Angola; Benin; Botswana; British Indian Ocean Territory; Burkina Faso; Burundi; Cabo Verde; Cameroon; Central African Republic; Chad; Comoros; Congo; Côte d’Ivoire; Democratic Republic of the Congo; Djibouti; Egypt; Equatorial Guinea; Eritrea; Eswatini; Ethiopia; French Southern Territories; Gabon; Gambia; Ghana; Guinea; Guinea-Bissau; Kenya; Lesotho; Liberia; Libya; Madagascar; Malawi; Mali; Mauritania; Mauritius; Mayotte; Morocco; Mozambique; Namibia; Niger; Nigeria; Rwanda; Réunion; Saint Helena; Sao Tome and Principe; Senegal; Seychelles; Sierra Leone; Somalia; South Africa; South Sudan; Sudan; Togo; Tunisia; Uganda; United Republic of Tanzania; Western Sahara; Zambia; Zimbabwe ;\",\"Anguilla; Antigua and Barbuda; Argentina; Aruba; Bahamas; Barbados; Belize; Bermuda; Bolivia (Plurinational State of); Bonaire, Sint Eustatius and Saba; Bouvet Island; Brazil; British Virgin Islands; Canada; Cayman Islands; Chile; Colombia; Costa Rica; Cuba; Curaçao; Dominica; Dominican Republic; Ecuador; El Salvador; Falkland Islands (Malvinas); French Guiana; Greenland; Grenada; Guadeloupe; Guatemala; Guyana; Haiti; Honduras; Jamaica; Martinique; Mexico; Montserrat; Nicaragua; Panama; Paraguay; Peru; Puerto Rico; Saint Barthélemy; Saint Kitts and Nevis; Saint Lucia; Saint Martin (French Part); Saint Pierre and Miquelon; Saint Vincent and the Grenadines; Sint Maarten (Dutch part); South Georgia and the South Sandwich Islands; Suriname; Trinidad and Tobago; Turks and Caicos Islands; United States Virgin Islands; United States of America; Uruguay; Venezuela (Bolivarian Republic of) ;\",\"Afghanistan; Armenia; Azerbaijan; Bahrain; Bangladesh; Bhutan; Brunei Darussalam; Cambodia; China; China, Hong Kong Special Administrative Region; China, Macao Special Administrative Region; Cyprus; Democratic People's Republic of Korea; Georgia; India; Indonesia; Iran (Islamic Republic of); Iraq; Israel; Japan; Jordan; Kazakhstan; Kuwait; Kyrgyzstan; Lao People's Democratic Republic; Lebanon; Malaysia; Maldives; Mongolia; Myanmar; Nepal; Oman; Pakistan; Philippines; Qatar; Republic of Korea; Saudi Arabia; Singapore; Sri Lanka; State of Palestine; Syrian Arab Republic; Tajikistan; Thailand; Timor-Leste; Turkmenistan; Türkiye; United Arab Emirates; Uzbekistan; Viet Nam; Yemen ;\",\"Albania; Andorra; Austria; Belarus; Belgium; Bosnia and Herzegovina; Bulgaria; Croatia; Czechia; Denmark; Estonia; Faroe Islands; Finland; France; Germany; Gibraltar; Greece; Guernsey; Holy See; Hungary; Iceland; Ireland; Isle of Man; Italy; Jersey; Latvia; Liechtenstein; Lithuania; Luxembourg; Malta; Monaco; Montenegro; Netherlands; North Macedonia; Norway; Poland; Portugal; Republic of Moldova; Romania; Russian Federation; San Marino; Sark; Serbia; Slovakia; Slovenia; Spain; Svalbard and Jan Mayen Islands; Sweden; Switzerland; Ukraine; United Kingdom of Great Britain and Northern Ireland; Åland Islands ;\",\"American Samoa; Australia; Christmas Island; Cocos (Keeling) Islands; Cook Islands; Fiji; French Polynesia; Guam; Heard Island and McDonald Islands; Kiribati; Marshall Islands; Micronesia (Federated States of); Nauru; New Caledonia; New Zealand; Niue; Norfolk Island; Northern Mariana Islands; Palau; Papua New Guinea; Pitcairn; Samoa; Solomon Islands; Tokelau; Tonga; Tuvalu; United States Minor Outlying Islands; Vanuatu; Wallis and Futuna Islands ;\"],[60,57,50,52,29]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Region Name<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"Region Name\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n***\n\n\"Region\" is a classification scheme with **248\ncountries in 5 regions**.\n\n::::\n:::::\n\n###### Sub-region\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-show-sub-regional-groups}\n: Show Sub-regions of the UNSD M49 Geoscheme\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(\n    m49_sub_region <- pb_class_scheme(\n            df <-  base::readRDS(\"data/unsd/m49_clean.rds\"),\n            sel1 = rlang::quo(`Country or Area`),\n            sel2 = rlang::quo(`Sub-region Name`)\n        )\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-64d61adff2c0f19c711f\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-64d61adff2c0f19c711f\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\"],[\"Australia and New Zealand\",\"Central Asia\",\"Eastern Asia\",\"Eastern Europe\",\"Latin America and the Caribbean\",\"Melanesia\",\"Micronesia\",\"Northern Africa\",\"Northern America\",\"Northern Europe\",\"Polynesia\",\"South-eastern Asia\",\"Southern Asia\",\"Southern Europe\",\"Sub-Saharan Africa\",\"Western Asia\",\"Western Europe\"],[\"Australia; Christmas Island; Cocos (Keeling) Islands; Heard Island and McDonald Islands; New Zealand; Norfolk Island ;\",\"Kazakhstan; Kyrgyzstan; Tajikistan; Turkmenistan; Uzbekistan ;\",\"China; China, Hong Kong Special Administrative Region; China, Macao Special Administrative Region; Democratic People's Republic of Korea; Japan; Mongolia; Republic of Korea ;\",\"Belarus; Bulgaria; Czechia; Hungary; Poland; Republic of Moldova; Romania; Russian Federation; Slovakia; Ukraine ;\",\"Anguilla; Antigua and Barbuda; Argentina; Aruba; Bahamas; Barbados; Belize; Bolivia (Plurinational State of); Bonaire, Sint Eustatius and Saba; Bouvet Island; Brazil; British Virgin Islands; Cayman Islands; Chile; Colombia; Costa Rica; Cuba; Curaçao; Dominica; Dominican Republic; Ecuador; El Salvador; Falkland Islands (Malvinas); French Guiana; Grenada; Guadeloupe; Guatemala; Guyana; Haiti; Honduras; Jamaica; Martinique; Mexico; Montserrat; Nicaragua; Panama; Paraguay; Peru; Puerto Rico; Saint Barthélemy; Saint Kitts and Nevis; Saint Lucia; Saint Martin (French Part); Saint Vincent and the Grenadines; Sint Maarten (Dutch part); South Georgia and the South Sandwich Islands; Suriname; Trinidad and Tobago; Turks and Caicos Islands; United States Virgin Islands; Uruguay; Venezuela (Bolivarian Republic of) ;\",\"Fiji; New Caledonia; Papua New Guinea; Solomon Islands; Vanuatu ;\",\"Guam; Kiribati; Marshall Islands; Micronesia (Federated States of); Nauru; Northern Mariana Islands; Palau; United States Minor Outlying Islands ;\",\"Algeria; Egypt; Libya; Morocco; Sudan; Tunisia; Western Sahara ;\",\"Bermuda; Canada; Greenland; Saint Pierre and Miquelon; United States of America ;\",\"Denmark; Estonia; Faroe Islands; Finland; Guernsey; Iceland; Ireland; Isle of Man; Jersey; Latvia; Lithuania; Norway; Sark; Svalbard and Jan Mayen Islands; Sweden; United Kingdom of Great Britain and Northern Ireland; Åland Islands ;\",\"American Samoa; Cook Islands; French Polynesia; Niue; Pitcairn; Samoa; Tokelau; Tonga; Tuvalu; Wallis and Futuna Islands ;\",\"Brunei Darussalam; Cambodia; Indonesia; Lao People's Democratic Republic; Malaysia; Myanmar; Philippines; Singapore; Thailand; Timor-Leste; Viet Nam ;\",\"Afghanistan; Bangladesh; Bhutan; India; Iran (Islamic Republic of); Maldives; Nepal; Pakistan; Sri Lanka ;\",\"Albania; Andorra; Bosnia and Herzegovina; Croatia; Gibraltar; Greece; Holy See; Italy; Malta; Montenegro; North Macedonia; Portugal; San Marino; Serbia; Slovenia; Spain ;\",\"Angola; Benin; Botswana; British Indian Ocean Territory; Burkina Faso; Burundi; Cabo Verde; Cameroon; Central African Republic; Chad; Comoros; Congo; Côte d’Ivoire; Democratic Republic of the Congo; Djibouti; Equatorial Guinea; Eritrea; Eswatini; Ethiopia; French Southern Territories; Gabon; Gambia; Ghana; Guinea; Guinea-Bissau; Kenya; Lesotho; Liberia; Madagascar; Malawi; Mali; Mauritania; Mauritius; Mayotte; Mozambique; Namibia; Niger; Nigeria; Rwanda; Réunion; Saint Helena; Sao Tome and Principe; Senegal; Seychelles; Sierra Leone; Somalia; South Africa; South Sudan; Togo; Uganda; United Republic of Tanzania; Zambia; Zimbabwe ;\",\"Armenia; Azerbaijan; Bahrain; Cyprus; Georgia; Iraq; Israel; Jordan; Kuwait; Lebanon; Oman; Qatar; Saudi Arabia; State of Palestine; Syrian Arab Republic; Türkiye; United Arab Emirates; Yemen ;\",\"Austria; Belgium; France; Germany; Liechtenstein; Luxembourg; Monaco; Netherlands; Switzerland ;\"],[6,5,7,10,52,5,8,7,5,17,10,11,9,16,53,18,9]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Sub-region Name<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"Sub-region Name\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n***\n\n\n\"Sub-region\" is a classification scheme with **248\ncountries in 17 regions**.\n\n::::\n:::::\n\n###### Intermediate\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-show-intermediate-regional-groups}\n: : Show Intermediate Regions of the UNSD M49 Geoscheme\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(\n    m49_intermediate_region <- pb_class_scheme(\n                df = base::readRDS(\"data/unsd/m49_clean.rds\"),\n                sel1 = rlang::quo(`Country or Area`),\n                sel2 = rlang::quo(`Intermediate Region Name`)\n            )\n)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-1df5600c78f17b86fb8b\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-1df5600c78f17b86fb8b\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"],[\"Caribbean\",\"Central America\",\"Channel Islands\",\"Eastern Africa\",\"Middle Africa\",\"South America\",\"Southern Africa\",\"Western Africa\",null],[\"Anguilla; Antigua and Barbuda; Aruba; Bahamas; Barbados; Bonaire, Sint Eustatius and Saba; British Virgin Islands; Cayman Islands; Cuba; Curaçao; Dominica; Dominican Republic; Grenada; Guadeloupe; Haiti; Jamaica; Martinique; Montserrat; Puerto Rico; Saint Barthélemy; Saint Kitts and Nevis; Saint Lucia; Saint Martin (French Part); Saint Vincent and the Grenadines; Sint Maarten (Dutch part); Trinidad and Tobago; Turks and Caicos Islands; United States Virgin Islands ;\",\"Belize; Costa Rica; El Salvador; Guatemala; Honduras; Mexico; Nicaragua; Panama ;\",\"Guernsey; Jersey; Sark ;\",\"British Indian Ocean Territory; Burundi; Comoros; Djibouti; Eritrea; Ethiopia; French Southern Territories; Kenya; Madagascar; Malawi; Mauritius; Mayotte; Mozambique; Rwanda; Réunion; Seychelles; Somalia; South Sudan; Uganda; United Republic of Tanzania; Zambia; Zimbabwe ;\",\"Angola; Cameroon; Central African Republic; Chad; Congo; Democratic Republic of the Congo; Equatorial Guinea; Gabon; Sao Tome and Principe ;\",\"Argentina; Bolivia (Plurinational State of); Bouvet Island; Brazil; Chile; Colombia; Ecuador; Falkland Islands (Malvinas); French Guiana; Guyana; Paraguay; Peru; South Georgia and the South Sandwich Islands; Suriname; Uruguay; Venezuela (Bolivarian Republic of) ;\",\"Botswana; Eswatini; Lesotho; Namibia; South Africa ;\",\"Benin; Burkina Faso; Cabo Verde; Côte d’Ivoire; Gambia; Ghana; Guinea; Guinea-Bissau; Liberia; Mali; Mauritania; Niger; Nigeria; Saint Helena; Senegal; Sierra Leone; Togo ;\",\"Afghanistan; Albania; Algeria; American Samoa; Andorra; Armenia; Australia; Austria; Azerbaijan; Bahrain; Bangladesh; Belarus; Belgium; Bermuda; Bhutan; Bosnia and Herzegovina; Brunei Darussalam; Bulgaria; Cambodia; Canada; China; China, Hong Kong Special Administrative Region; China, Macao Special Administrative Region; Christmas Island; Cocos (Keeling) Islands; Cook Islands; Croatia; Cyprus; Czechia; Democratic People's Republic of Korea; Denmark; Egypt; Estonia; Faroe Islands; Fiji; Finland; France; French Polynesia; Georgia; Germany; Gibraltar; Greece; Greenland; Guam; Heard Island and McDonald Islands; Holy See; Hungary; Iceland; India; Indonesia; Iran (Islamic Republic of); Iraq; Ireland; Isle of Man; Israel; Italy; Japan; Jordan; Kazakhstan; Kiribati; Kuwait; Kyrgyzstan; Lao People's Democratic Republic; Latvia; Lebanon; Libya; Liechtenstein; Lithuania; Luxembourg; Malaysia; Maldives; Malta; Marshall Islands; Micronesia (Federated States of); Monaco; Mongolia; Montenegro; Morocco; Myanmar; Nauru; Nepal; Netherlands; New Caledonia; New Zealand; Niue; Norfolk Island; North Macedonia; Northern Mariana Islands; Norway; Oman; Pakistan; Palau; Papua New Guinea; Philippines; Pitcairn; Poland; Portugal; Qatar; Republic of Korea; Republic of Moldova; Romania; Russian Federation; Saint Pierre and Miquelon; Samoa; San Marino; Saudi Arabia; Serbia; Singapore; Slovakia; Slovenia; Solomon Islands; Spain; Sri Lanka; State of Palestine; Sudan; Svalbard and Jan Mayen Islands; Sweden; Switzerland; Syrian Arab Republic; Tajikistan; Thailand; Timor-Leste; Tokelau; Tonga; Tunisia; Turkmenistan; Tuvalu; Türkiye; Ukraine; United Arab Emirates; United Kingdom of Great Britain and Northern Ireland; United States Minor Outlying Islands; United States of America; Uzbekistan; Vanuatu; Viet Nam; Wallis and Futuna Islands; Western Sahara; Yemen; Åland Islands ;\"],[28,8,3,22,9,16,5,17,140]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Intermediate Region Name<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"Intermediate Region Name\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n***\n\n\"Intermediate Region\" is a classification scheme with **248\ncountries in 9 regions**.\n\n\n\n::::\n:::::\n\n:::\n\n::::\n:::::\n\n\n## Clean Data (second step) {#sec-clean-data-2}\n\n\nThe intermediate grouping does not result into the expected 22 (with Antarctica: 23) different regions as is mentioned in many documents. See for instance the [Article on Wikipedia about the UN geoscheme](https://en.wikipedia.org/wiki/United_Nations_geoscheme) which features a [colored world map](https://en.wikipedia.org/wiki/United_Nations_geoscheme#/media/File:United_Nations_geographical_subregions.png) and a list of countries grouped into the 22 different regions.\n\n![M49 Geoscheme developed and maintained by the United Nations Statistics Divisions (UNSD). (<a href=\"http://creativecommons.org/licenses/by-sa/3.0/\" title=\"Creative Commons Attribution-Share Alike 3.0\">CC BY-SA 3.0</a>, <a href=\"https://commons.wikimedia.org/w/index.php?curid=497598\">Wikimedia Commons</a>)](img/chap01_UN_geographical_subregions.png){#fig-chap01_UN_geographical_subregions\nfig-alt=\"22 geographical sub-regions as defined by the UNSD are shown with different colors. Antarctica is not shown.\" fig-align=\"center\" \nwidth=\"100%\"}\n\nThe solution is that we have the `NA`s in `Intermediate Region Name` to replace with the values of the sub-regions. Additionally --- as can be seen in @cnj-show-intermediate-regional-groups --- there is a second small problem: Three small countries are listed as an extra group \"Channel Islands\". To get the official intermediate grouping we need to get rid of this group and sort all three of them into the category of \n\"Northern Europe\".\n\n### Procedure\n\n:::::{.my-procedure}\n:::{.my-procedure-header}\n:::::: {#prp-cnj-clean-m49-2}\n: Clean M49 data of the UNSD geoscheme classification (second step)\n::::::\n:::\n::::{.my-procedure-container}\n1. Copy the values of `Intermediate Region Name` into a new column `Intermediate Region 2` but replace the `NA`s with values from the `Sub-region Name` column.\n2. Replace the \"Channel Islands\" values in `Intermediate Region 2` with the value of \"Northern Europe\".\n3. Relocate the new `Intermediate Region 2` column after the `Intermediate Region Name` column.\n\n::::\n:::::\n\n### Result (second step) {#sec-display-result-2}\n\n#### Data Structure\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-clean-m49-2}\n: Clean UNSD M49 geoscheme classification data (second step)\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm49_clean2 <- base::readRDS(\"data/unsd/m49_clean.rds\") |> \n## replace `NA`s of intermediate regions with sub-region values ######\n  dplyr::mutate(`Intermediate Region 2` = \n         base::ifelse(is.na(`Intermediate Region Name`), \n                      `Sub-region Name`, `Intermediate Region Name`)\n  ) |> # (1)\n## replace \"\"Channel Islands\" with \"North Europe\" ######\n    dplyr::mutate(`Intermediate Region 2` = \n         base::ifelse(`Intermediate Region 2` == \"Channel Islands\", \n                      \"Northern Europe\", `Intermediate Region 2`)\n  ) |> # (2)\n    dplyr::relocate(`Intermediate Region 2`, .after = `Intermediate Region Name`) # (3)\n\n\n\n## save new tibble as clean2 ##########\npb_save_data_file(\"unsd\", m49_clean2, \"m49_clean2.rds\")\n\n\n## display results ##########\nm49_clean2 <- base::readRDS(\"data/unsd/m49_clean2.rds\")\nglue::glue(\"******************* Using skimr::skim() ***************************\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> ******************* Using skimr::skim() ***************************\n```\n\n\n:::\n\n```{.r .cell-code}\nskimr::skim(m49_clean2)\n```\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |           |\n|:------------------------|:----------|\n|Name                     |m49_clean2 |\n|Number of rows           |248        |\n|Number of columns        |14         |\n|_______________________  |           |\n|Column type frequency:   |           |\n|character                |14         |\n|________________________ |           |\n|Group variables          |None       |\n\n\n**Variable type: character**\n\n|skim_variable            | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:------------------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|ISO-alpha3 Code          |         1|          1.00|   3|   3|     0|      247|          0|\n|Country or Area          |         0|          1.00|   4|  52|     0|      248|          0|\n|Region Code              |         0|          1.00|   3|   3|     0|        5|          0|\n|Region Name              |         0|          1.00|   4|   8|     0|        5|          0|\n|Sub-region Code          |         0|          1.00|   3|   3|     0|       17|          0|\n|Sub-region Name          |         0|          1.00|   9|  31|     0|       17|          0|\n|Intermediate Region Code |       140|          0.44|   3|   3|     0|        8|          0|\n|Intermediate Region Name |       140|          0.44|   9|  15|     0|        8|          0|\n|Intermediate Region 2    |         0|          1.00|   9|  25|     0|       22|          0|\n|M49 Code                 |         0|          1.00|   3|   3|     0|      248|          0|\n|ISO-alpha2 Code          |         1|          1.00|   2|   2|     0|      247|          0|\n|LDC                      |         0|          1.00|   1|   1|     0|        2|          0|\n|LLDC                     |         0|          1.00|   1|   1|     0|        2|          0|\n|SIDS                     |         0|          1.00|   1|   1|     0|        2|          0|\n\n\n:::\n\n```{.r .cell-code}\nglue::glue(\"\")\n```\n\n```{.r .cell-code}\nglue::glue(\"****************** Using dplyr::glimpse() *************************\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> ****************** Using dplyr::glimpse() *************************\n```\n\n\n:::\n\n```{.r .cell-code}\ndplyr::glimpse(m49_clean2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> Rows: 248\n#> Columns: 14\n#> $ `ISO-alpha3 Code`          <chr> \"AFG\", \"ALB\", \"DZA\", \"ASM\", \"AND\", \"AGO\", \"…\n#> $ `Country or Area`          <chr> \"Afghanistan\", \"Albania\", \"Algeria\", \"Ameri…\n#> $ `Region Code`              <chr> \"142\", \"150\", \"002\", \"009\", \"150\", \"002\", \"…\n#> $ `Region Name`              <chr> \"Asia\", \"Europe\", \"Africa\", \"Oceania\", \"Eur…\n#> $ `Sub-region Code`          <chr> \"034\", \"039\", \"015\", \"061\", \"039\", \"202\", \"…\n#> $ `Sub-region Name`          <chr> \"Southern Asia\", \"Southern Europe\", \"Northe…\n#> $ `Intermediate Region Code` <chr> NA, NA, NA, NA, NA, \"017\", \"029\", \"029\", \"0…\n#> $ `Intermediate Region Name` <chr> NA, NA, NA, NA, NA, \"Middle Africa\", \"Carib…\n#> $ `Intermediate Region 2`    <chr> \"Southern Asia\", \"Southern Europe\", \"Northe…\n#> $ `M49 Code`                 <chr> \"004\", \"008\", \"012\", \"016\", \"020\", \"024\", \"…\n#> $ `ISO-alpha2 Code`          <chr> \"AF\", \"AL\", \"DZ\", \"AS\", \"AD\", \"AO\", \"AI\", \"…\n#> $ LDC                        <chr> \"1\", \"0\", \"0\", \"0\", \"0\", \"1\", \"0\", \"0\", \"0\"…\n#> $ LLDC                       <chr> \"1\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\", \"0\"…\n#> $ SIDS                       <chr> \"0\", \"0\", \"0\", \"1\", \"0\", \"0\", \"1\", \"1\", \"0\"…\n```\n\n\n:::\n:::\n\n\n\n\n\n::::\n:::::\n\n\n#### Intermediate Region 2\n\n:::::{.my-r-code}\n:::{.my-r-code-header}\n:::::: {#cnj-show-intermediate-region-2}\n: Show correct intermediate region for the UNSD M49 Geoscheme\n::::::\n:::\n::::{.my-r-code-container}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## show new intermediate result ###############\n(\n    m49_intermediate2 <- pb_class_scheme(\n            df = base::readRDS(\"data/unsd/m49_clean2.rds\"),\n            sel1 = rlang::quo(`Country or Area`),\n            sel2 = rlang::quo(`Intermediate Region 2`)\n            )\n) \n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-e2a2bf81e34ad3cf1ce3\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-e2a2bf81e34ad3cf1ce3\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\"],[\"Australia and New Zealand\",\"Caribbean\",\"Central America\",\"Central Asia\",\"Eastern Africa\",\"Eastern Asia\",\"Eastern Europe\",\"Melanesia\",\"Micronesia\",\"Middle Africa\",\"Northern Africa\",\"Northern America\",\"Northern Europe\",\"Polynesia\",\"South America\",\"South-eastern Asia\",\"Southern Africa\",\"Southern Asia\",\"Southern Europe\",\"Western Africa\",\"Western Asia\",\"Western Europe\"],[\"Australia; Christmas Island; Cocos (Keeling) Islands; Heard Island and McDonald Islands; New Zealand; Norfolk Island ;\",\"Anguilla; Antigua and Barbuda; Aruba; Bahamas; Barbados; Bonaire, Sint Eustatius and Saba; British Virgin Islands; Cayman Islands; Cuba; Curaçao; Dominica; Dominican Republic; Grenada; Guadeloupe; Haiti; Jamaica; Martinique; Montserrat; Puerto Rico; Saint Barthélemy; Saint Kitts and Nevis; Saint Lucia; Saint Martin (French Part); Saint Vincent and the Grenadines; Sint Maarten (Dutch part); Trinidad and Tobago; Turks and Caicos Islands; United States Virgin Islands ;\",\"Belize; Costa Rica; El Salvador; Guatemala; Honduras; Mexico; Nicaragua; Panama ;\",\"Kazakhstan; Kyrgyzstan; Tajikistan; Turkmenistan; Uzbekistan ;\",\"British Indian Ocean Territory; Burundi; Comoros; Djibouti; Eritrea; Ethiopia; French Southern Territories; Kenya; Madagascar; Malawi; Mauritius; Mayotte; Mozambique; Rwanda; Réunion; Seychelles; Somalia; South Sudan; Uganda; United Republic of Tanzania; Zambia; Zimbabwe ;\",\"China; China, Hong Kong Special Administrative Region; China, Macao Special Administrative Region; Democratic People's Republic of Korea; Japan; Mongolia; Republic of Korea ;\",\"Belarus; Bulgaria; Czechia; Hungary; Poland; Republic of Moldova; Romania; Russian Federation; Slovakia; Ukraine ;\",\"Fiji; New Caledonia; Papua New Guinea; Solomon Islands; Vanuatu ;\",\"Guam; Kiribati; Marshall Islands; Micronesia (Federated States of); Nauru; Northern Mariana Islands; Palau; United States Minor Outlying Islands ;\",\"Angola; Cameroon; Central African Republic; Chad; Congo; Democratic Republic of the Congo; Equatorial Guinea; Gabon; Sao Tome and Principe ;\",\"Algeria; Egypt; Libya; Morocco; Sudan; Tunisia; Western Sahara ;\",\"Bermuda; Canada; Greenland; Saint Pierre and Miquelon; United States of America ;\",\"Denmark; Estonia; Faroe Islands; Finland; Guernsey; Iceland; Ireland; Isle of Man; Jersey; Latvia; Lithuania; Norway; Sark; Svalbard and Jan Mayen Islands; Sweden; United Kingdom of Great Britain and Northern Ireland; Åland Islands ;\",\"American Samoa; Cook Islands; French Polynesia; Niue; Pitcairn; Samoa; Tokelau; Tonga; Tuvalu; Wallis and Futuna Islands ;\",\"Argentina; Bolivia (Plurinational State of); Bouvet Island; Brazil; Chile; Colombia; Ecuador; Falkland Islands (Malvinas); French Guiana; Guyana; Paraguay; Peru; South Georgia and the South Sandwich Islands; Suriname; Uruguay; Venezuela (Bolivarian Republic of) ;\",\"Brunei Darussalam; Cambodia; Indonesia; Lao People's Democratic Republic; Malaysia; Myanmar; Philippines; Singapore; Thailand; Timor-Leste; Viet Nam ;\",\"Botswana; Eswatini; Lesotho; Namibia; South Africa ;\",\"Afghanistan; Bangladesh; Bhutan; India; Iran (Islamic Republic of); Maldives; Nepal; Pakistan; Sri Lanka ;\",\"Albania; Andorra; Bosnia and Herzegovina; Croatia; Gibraltar; Greece; Holy See; Italy; Malta; Montenegro; North Macedonia; Portugal; San Marino; Serbia; Slovenia; Spain ;\",\"Benin; Burkina Faso; Cabo Verde; Côte d’Ivoire; Gambia; Ghana; Guinea; Guinea-Bissau; Liberia; Mali; Mauritania; Niger; Nigeria; Saint Helena; Senegal; Sierra Leone; Togo ;\",\"Armenia; Azerbaijan; Bahrain; Cyprus; Georgia; Iraq; Israel; Jordan; Kuwait; Lebanon; Oman; Qatar; Saudi Arabia; State of Palestine; Syrian Arab Republic; Türkiye; United Arab Emirates; Yemen ;\",\"Austria; Belgium; France; Germany; Liechtenstein; Luxembourg; Monaco; Netherlands; Switzerland ;\"],[6,28,8,5,22,7,10,5,8,9,7,5,17,10,16,11,5,9,16,17,18,9]],\"container\":\"<table class=\\\"cell-border compact stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Intermediate Region 2<\\/th>\\n      <th>Country<\\/th>\\n      <th>N<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":25,\"lengthMenu\":[5,10,15,20,25,50],\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"Intermediate Region 2\",\"targets\":1},{\"name\":\"Country\",\"targets\":2},{\"name\":\"N\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n***\n\nThe new regional group `Intermediate Region 2` is a classification scheme with **248 countries in 22 regions**. As Antarctica is not included the grouping with `Intermediate Region 2` represents the correct M49 classification.\n\n::::\n:::::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/datatables-binding-0.33/datatables.js\"></script>\n<script src=\"site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n<link href=\"site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}